----------------
- Mise en page -
----------------
  Nombre de caractère par ligne à l'écran
    La mesure a été effectuée de la manière suivante
      - affichage de Notepad++ en plein écran
      - fichier > Nouveau
      - décompte du nombre de caractère de la première ligne pouvant être affichés sans scroller
    Résultat
      écran large    (1680 x 1050) : 203
      écran standard (1280 x 800)  : 153

  Template de tableau
    +-----------+----------+
    | header 1  | header 2 |
    +-----------+----------+
    |           |          |
    |           |          |
    |           |          |
    +-----------+----------+

  Marqueur du nombre de caractères
                                              50>                                              100>                                              150>

  Nettoyage des espaces inutiles
    Chercher      : \s+$
    Remplacer par :

--------------
- Powershell -
--------------
  Information de type
    file        : correspond à un fichier (FileInfo) ou un répertoire (DirectoryInfo)
    string      : une chaîne de caractères. La nature de l'objet représenté est indiqué entre parenthèses (path par exemple)
    file set    : un ensemble de file passé sur le pipe
    string set  : un ensemble de chaînes de caractères passé sur le pipe
    string list : une liste de chaînes caractères séparées par des ,
    object      : un objet au sens large

  Compatibilité de type
    un objet de type |file      | peut être utilisé partout ou un |file set   | est attendu
                     |string    |                                 |string set |
                     |string    |                                 |string list|
                     |quelconque|                                 |object     |

  Propriétés de file
    BaseName      : nom du fichier sans son extension
    Extension     : extension du fichier
    FullName      : nom complet du fichier (avec son path)
    Name          : nom du fichier avec son extension
    PSParentPath  : nom du répertoire parent


  Template des commandes
    objectif de la commande
      type d'entrée 1 > commande 1 > type de sortie 1
      type d'entrée 2 > commande 2 > type de sortie 2
      alias 1, alias 2, alias 3
      option 1 (shortcut 1)
      option 2 (shortcut 2)
      remarque 1
      remarque 2

  IO
    lister tous les éléments (fichiers et répertoires) d'un répertoire donné
      directory path > Get-ChildItem -r "... > file set
      directory path > $dir="...";Get-ChildItem -r $dir > file set
        dir, ls
        -recurse (-r)

    lire le contenu d'un fichier
      string (path) list > Get-Content(...) > string set
      string (path) list > Get-Content(...) > file list

    récupérer un file set à partir d'une liste de path
      string (path) list > Get-Content(...) > file

    écrire dans un fichier
      object, string (path) > ... | Out-File -filepath "..." > file
        -append : permet de compléter un fichier déjà existant
        -inputObject : permet de préciser un objet à écrire

  Filtrage
    ne conserver que les répertoires d'un file set (et pas les fichiers)
      file set > ... | where {$_.PsIsContainer} > file set

    ne conserver que les fichiers d'un file set (et pas les répertoires)
      file set > ... | where {!$_.PsIsContainer} > file set

    ne conserver que les entrées qui correspondent à une expression régulière
      string set, regular expression > ... | where {$_ -match "..."} > string set

  Boucle
    effectuer un même traitement sur un ensemble de données
      string set + commande powershell > ... | Foreach{...} > string set (si écriture par la commande)
      file set + commande powershell > ... | Foreach{...} > string set (si écriture par la commande)
        Au début du Foreach, créer les variables qui seront utilisées dans la commande
        l'expression $_ désigne l'entrée courante du "string set"
        plusieurs sous-commandes peuvent être séparées par un ;

  Pipeline
    écrire un objet sur le pipeline
      objet > Write-Output(...) > objet

  Information sur les objets
    connaître le type et les membres d'un objet
      objet > ... | Get-Member > MemberDefinition

    lister les noms d'un ensemble de fichiers
      file set > ... | Foreach{$_.FullName} > string set
      file set > ... | Foreach{$_.Name} > string set

  Exemples
    copie de tous les fichiers contenus dans le répertoire "C:\Temp\PS", avec ajout de BEGIN sur la première ligne et de END sur la dernière lignes
      sans utilisation de pipe au sein du Foreach :
        Get-ChildItem -r "C:\Temp\PS" | where {!$_.PsIsContainer} | Foreach{$input=$_.FullName;$output=$_.PSParentPath+"\"+$_.BaseName+".copie.txt";$output;$content=Get-Content($input);Out-File -filePath "$output" -inputObject "BEGIN";Out-File -append -filePath "$output" -inputObject $content;Out-File -append -filePath "$output" -inputObject "END"}
      avec utilisation de pipe au sein du Foreach :
        Get-ChildItem -r "C:\Temp\PS" | where {!$_.PsIsContainer} | Foreach{$input=$_.FullName;$output=$_.PSParentPath+"\"+$_.BaseName+".copie.txt";$content=Get-Content($input);Write-Output("BEGIN", $content, "END")}
      variante avec utilisation du caractère d'échappement `r signifiant un retour à la ligne :
        Get-ChildItem -r "C:\Temp\PS" | where {!$_.PsIsContainer} | Foreach{$input=$_.FullName;$output=$_.PSParentPath+"\"+$_.BaseName+".copie.txt";$output;$content=Get-Content($input);$outputContent="BEGIN`r"+$content+"`rEND";Out-File -filePath "$output" -inputObject "$outputContent"}

----------------------------
- Modification de fichiers -
----------------------------
  L'objectif de cette section est de donner des méthodes de modification de fichiers.
  Elle détaille les outils utilisés, ainsi que les commandes au sein de ces outils.

  Carriage return (CR): \r
  Line feed (LF)      : \n
  fin de ligne
    sous UNIX         : \n
    sous Windows      : \r\n
    sous Mac          : \r

  Convertir les fins de ligne d'un fichier (Windows/Unix/Mac)
    Notepad++
      vers UNIX : Edition > Convertir les sauts de ligne > Convertir en Format UNIX (LF)
      vers Windows : Edition > Convertir les sauts de ligne > Convertir en Format Windows (CR+LF)
      vers Mac : Edition > Convertir les sauts de ligne > Convertir en Format Mac (CR)

  Voir les séquences de fin de ligne
    Notepad++
      Affichage > Symboles spéciaux > Afficher les symboles de fin de ligne

  Voir les blancs et les tabulations
    Notepad++
      Affichage > Symboles spéciaux > Afficher les blancs et les tabulations

  Supprimer des lignes vides (i.e ne contenant aucun caractère, pas même des espaces)
    Notepad++ (plugin TextFX)
      TextFX > TextFX Edit > Delete Blank Lines

  Compacter des lignes vides consécutives en une seule ligne vide
    Notepad++ (plugin TextFX)
      TextFX > TextFX Edit > Delete Surplus Blank Lines (mais comportement étrange avec les lignes contenant uniquement des espaces)

  Distribuer sur différentes lignes des items faisant partie d'une liste
    Exemple
                 A
      A, B, C -> B
                 C
    Notepad++
      remplacer (CTRL + H)
      mode étendu (\n, \r, \t, \0, \x...)
      recherche : ,
      remplacer par : \r\n

  Assembler différentes lignes en une liste
    Exemple
      A
      B -> A, B, C
      C
    Notepad++
      remplacer (CTRL + H)
      mode étendu (\n, \r, \t, \0, \x...)
      recherche : \r\n
      remplacer par : ,

  Trier des lignes en supprimant les doublons
    Notepad++ (plugin TextFX)
      TextFX > TextFX Tools > cocher "+Sort outputs only UNIQUE (at column) lines"
      TextFX > TextFX Tools > cocher "+Sort ascending" pour un tri par ordre alphabétique / décocher pour un ordre inverse
      TextFX > TextFX Tools > cliquer sur "Sort lines case sensitive (at column)" ou sur "Sort lines case insensitive (at column)"

  Indenter les xml
    IntelliJ
      Code > Reformat Code...
      Raccourci par défaut : CTRL + ALT + L
      Fonctionne sur tous les fichiers du projet ou sur un ensemble de fichiers sélectionnés.

  Convertir "underscore" vers "camelcase"
    Example : iinvCEqSector -> IINV_C_EQ_SECTOR
    Notepad++
      1/ remplacer l'expression régulière ([A-Z]) par _\1 (cocher Respecter la casse)
      2/ passer en majuscule (CTRL + SHIFT + U)

  Comparer 2 listes
    Dans une feuille Excel
      en A1, saisir le formattage conditionnel : =ET(NON(ESTVIDE(A1)); NB.SI($B$1:$B$10000; A1)=0)
      en B1, saisir le formattage conditionnel : =ET(NON(ESTVIDE(B1)); NB.SI($A$1:$A$10000; B1)=0)
      copier le format de A1 sur la colonne A
      copier le format de B1 sur la colonne B
    Equivalence français / anglais : NB.SI / COUNTIF, ESTVIDE / ISBLANK, NON / NOT, ET / AND
    Inspiré de l'article http://www.techrepublic.com/blog/msoffice/use-conditional-formatting-to-compare-lists-in-excel/4310

  Table ASCII
    Table contenant 128 caractères
    Chaque caractère est codé sur 7 bit, ce qui permet bien la représentation de (2 puissance 7 =) 128 caractères
    Chaque caractère peut être représenté par un chiffre hexadécimal (entre 0 et F) suivi par un chiffre entre 0 et 7, ce qui permet bien la représentation des (16 x 8 =) 128 caractères.
    Voir http://www.asciitable.com/

  Table ASCII étendue
    Table contenant 256 caractères
    Chaque caractère est codé sur 8 bit, ce qui permet bien la représentation de (2 puissance 8 =) 256 caractères
    Chaque caractère peut être représenté par deux chiffres hexadécimal (entre 0 et F), ce qui permet bien la représentation des (16 x 16 =) 256 caractères.
    Ceci n'est pas une mise à jour de la table ASCII
    Il existe plusieurs extensions propriétaires de la table ASCII, incompatibles entre elles.
    Il existe plusieurs tables ASCII étendues définie par l'ISO : ce sont les table ISO 8859.
    La plus populaire des tables ISO 8859 est la table SO 8859-1, appelée également ISO Latin1

  UTF-8
    Système d'encodage des caractères internationaux d'Unicode rétro-compatible avec ASCII
    Chaque caractère est codé sur un ensemble de 1 à 4 octets.
    La rétro-compatibilité avec ASCII signifie que tout caractère ASCII se code en UTF-8 sous forme d'un unique octet, identique au code ASCII.

  Page de code
    Jeu de caractère associant un nombre à chaque caractère d'une langue.
    De nombreuse pages de code ont été définies autour de la norme ASCII, sous-ensemble commun à plusieurs pages de code.

  Unicode
    Standard informatique qui vise à permettre le codage de texte écrit en donnant à tout caractère de n’importe quel système d’écriture un nom et un identifiant numérique, et ce de manière unifiée, quelle que soit la plate-forme informatique ou le logiciel.
    Son but est de remplacer l’utilisation de pages de code nationales.
    Chaque caractère est associé à un nombre entier appelé point de code.
    L'espace de codage de ces nombres est divisé en 17 zones de 65 536 points de codes. Ces zones sont appelées plans.
    Un point de code est noté U+xxxx où xxxx est un nombre hexadécimal comportant de 4 à 6 chiffres.
    Les points de code du premier plan (appelé plan multilingue de base) comportent 4 chiffres (entre U+0000 et U+FFFF)
    Les points de code des 15 plans suivants comportent 5 chiffres (entre U+10000 et U+FFFFF)
    Les points de code du dernier plans comportent 6 chiffres (entre U+100000 et U+10FFFF).

--------------
- Subversion -
--------------
  Différences entre le working directory et la base
    svn diff

  Différences entre le working directory et le serveur
    svn diff -r HEAD

  Résumé des modifications locales
    svn status

  "Nettoyage" du working directory
    svn cleanup

  Informations sur le repository (branche, numéro de révision)
    svn info

  Passer un conflit en "résolu"
    svn resolved filename

  Vider les couples login/password stockés (en utilisant TortoiseSVN)
    - Clic droit > TortoiseSVN > Settings
    - Sélectionner l'item "Savec Data" dans l'arbre, puis cliquer sur le bouton "Clear" associé au label "Authentication data"

-------
- GIT -
-------

  Vocabulaire, syntaxe et notions Git

    Configuration
      Fichier de configuration globale Git
        fichier .gitConfig dans le répertoire %USERPROFILE%
        Récupérable en java par : System.getProperty("user.home");

      Variable de configuration
        Les variables sont regroupées en sections.
        Certaines sections (par exemple branch) sont elles mêmes divisées en sous sections (branche.<name>)
        Par exemple :
          color
          difftool
          difftool.<tool>
          mergetool
          mergetool.<tool>
          remote.<name>
          branch.<name>

    Commit
      Chaque commit est identifié par un SHA1, qui est un hashage dépendant :
        - du contenu du commit
        - des id des parents du commit
      Pour toute commande qui prend un commit en paramètre, il est possible de fournir : 
        - un nom de branche
        - un tag
        - une reférence relative (HEAD, HEAD^^, HEAD^3, ...)
        - un sha1 partiel (un début de sha1, avec suffisemment de chiffre pour que le commit soit identifialble de façon unique)
        - un sha1 complet

    Références
      Une référence pointe sur un commit
      Il en existe plusieurs types :
          - le branche locale  : mis à jour entre autres par les commandes commit, merge, rebase, reset, ...
          - le HEAD
          - une branche remote : mis à jour entre autres par les commandes fetch, pull, ...
          - un tag             : non mis à jour (sauf mise à jour explicite avec l'option "force")
      "References make commits recheable" :
        - en effet, à partir d'un commit il est possible d'atteindre ses parents
        - il est possible de revenir à tout commit reachable
        - le garbage collector de Git n'efface aucun commit reachable

      Branche
        Pour Git, une branche est un pointeur sur un commit spécifique.
        Lors du checkout d'une branche, le HEAD et la branche pointent sur le même commit.
        La  branche courante :
          - est markée par une * dans la liste des branche
          - est indiquée en gras dans gitk
          - c'est la référence de la branche courante qui sera modifiée quand le commit aura lieu

      head (en minuscules, à distinguer de HEAD en majuscules)
        Pointeur vers le dernier commit d'une branche.
        Il y a un head (en minuscule) par branche.
        Le SHA1 du head de la branche nom_de_branche est stocké dans le fichier .\.git\refs\heads\nom_de_branche.

      HEAD (en majuscules, à distinguer de head en minuscules)
        Pointeur vers le parent du prochain commit.
        Lors du checkout d'une branche, le HEAD et la branche pointent sur le même commit (c'est-à-dire le head de la branche).
        Il y a un HEAD (en majuscules) unique par repository.
        La valeur du HEAD est stockée dans le fichier .\.git\HEAD.
        Le HEAD est dit détaché lorsqu'il ne pointe pas sur le dernier commit de la branche courante (HEAD est différent du head de la branche).
        Ceci se produit lorsque l'on fait un checkout sur une référence qui n'est pas une branche (comme master~2 par exemple, ou sur un SHA1), l'effet étant de créer une branche anonyme.

      HEAD~
        Pointeur vers le parent du commit pointé par HEAD

      HEAD~2
        Pointeur vers le parent du commit parent du commit pointé par HEAD (et de même HEAD~3, HEAD~4, etc...)

    Zones
      Répertoire de travail (working directory)
        Ensemble des fichiers présents sur le disque dur, qui contient aussi bien les fichiers suivis que non suivis.
        C'est ce répertoire de travail qui contient les versions courantes (c'est-à-dire éventuellement modifiées) des fichiers.

      Index (Staging area)
        Versions d'un ensemble de fichiers qui feront parti du prochain commit

        Action "Stage"
          Ajout de fichiers à l'index

        Action "Unstage"
          Retrait de fichiers de l'index

        Ambiguité Concernant l'expression "suppression de fichier dans l'index"
          On distingue ici les deux sens :
            - suppression (unstage) : le fait de supprimer de l'index un fichier qui y a été ajouté.
                                      Dans ce cas, le prochain commit n'aura donc aucun effet sur le repo Git pour ce fichier.
                                      C'est un "unstage" du fichier.
                                      Pour faire un unstage, il suffit de remplacer le fichier de l'index par sa version du repo Git, ce qui se fait par :
                                        git reset nom_de_fichier
            - suppression (remove)  : le fait d'ajouter à l'index (staging) la suppression d'un fichier
                                      Dans ce cas, le prochain commit aura pour effet de supprimer le fichier du repo Git.
                                      C'est un "stage" de la suppression du fichier.
                                      Le remove s'effectue au moyen de la commande rm.

      Repository Git
        C'est l'endroit ou sont stockés les 4 types d'objets Git :
          - les blobs, utilisés pour stocker le contenu d'un fichier (c'est bien le contenu qui est stocké dans le blob, et pas la différence avec la version précédente du fichier.)
          - les tree (arbres), utilisés pour stocker un répertoire
          - les commits, qui contiennent :
            -> le nom de celui qui a créé le commit
            -> un pointeur vers un tree
            -> un pointeur vers le commit parent
          - les tags
        L'ensemble des fichiers suivis (tracked files) est l'union : 
          - des fichiers référencés par le dernier commit
          - des fichiers de l'index

    Commandes Git

      Commande commit
        Création d'un commit fils du commit pointé par le HEAD.
        Après le commit créé, le HEAD est déplacé vers ce nouveau commit ainsi que la branche si le HEAD n'est pas détaché.

      Commande checkout
        Déplacement du HEAD (éventuellement en le détachant)

      Commande cherry-pick
        Fonctionne en 3 étapes :
          - récupération d'une modification (diff entre 2 commits successifs)
            -> dans le cas le commit à récupérer est un merge, le commit a plusieurs parents.
               Pour connaitre la modification à appliquer, il faut donc savoir à quel parent se référer.
               Il est donc nécessaire de préciser dans ce cas le "parent number" qui déterminera le parent.
          - application de cette modification au répertoire de travail
          - commit des modifications

      ! Commande reset !
        ATTENTION : reset fait partie des commandes Git dangereuse (à la différence de la commande revert) car les commits non rérérencés après déplacements de la branches sont supprimés
        Déplacement du HEAD et de la branche courante, avec mise à jour optionnelle de l'index et du répertoire de travail.

      Commande rebase
        Déplacement d'une succession de commit (modification de leur parent)

      Commande stash
        Stash signifie "mettre de côté".
        Cette commande permet donc de mettre de côté des modifications locales (répertoire de travail + index).        
        Les commandes de stash gèrent une pile de modifications.
        stash@{0} désigne toujours le stash sur le dessus de la pile.
        Plus l'index i augmente, plus stash@{i} désigne des stash profond dans la pile.
        Attention : si stash@{i} désigne un stash dans la pile, après un nouvel appel de la commande stash, le même stash aura comme identifiant stash@{i}

    .
      : Désigne l'ensemble de tous les fichiers du répertoire courant

    Dandling objects
      Dandling blob   : modification ajoutée à l'index mais non commitée
      Dandling commit : commit non référencé

    Merge
      Git merge dans 2 cas 
       - appel de la commande merge
       - appel de la commande pull
      2 types de merge
        - fast-forward merge             : aucun commit n'est ajouté.
        - "true" merge (ou "real" merge) : un commit possèdant 2 parents est ajouté.

  Aide Git

    Lister les principales commandes git : git help
    Afficher l'aide sur une commande     : git help nom_de_commande

  Initialisation d'un repo Git

    Initialiser un répertoire git
      git init

    Cloner un répertoire git
      git clone nom_du_repo_git_a_cloner
      git clone nom_du_repo_git_a_cloner nom_du_repo_git_local

  Configuration Git

    Afficher la configuration globale
      git config --global -l

    Ajouter une variable
      git config --global --add nom_de_variable valeur_de_variable
      git config --local --add nom_de_variable valeur_de_variable
      Remarque : le nom_de_variable doit être de la forme "section.key"

    Afficher la configuration locale à un répertoire git
      git config --local -l
      git config --local --list

    Supprimer une variable locale
      git config --local --unset nom_de_variable

    Modifier la valeur d'une variable locale
      git config --local --replace-all nom_de_variable valeur_de_variable

    Configurer Notepad++ comme editeur (en local)
      git config --local core.editor "'C:/Program Files/Notepad++/notepad++.exe' -multiInst -notabbar -nosession -noPlugin"

    Configurer Notepad++ comme editeur (en local) en utilisant un fichier de script
      git config --local core.editor C:/GitEditor.bat
      Contenu de GitEditor.bat
          #!/bin/sh
          "c:/Program Files/Notepad++/notepad++.exe" -multiInst -notabbar -nosession -noPlugin "$*"

    Stocker les login / mot de passe pour GitHub
      Ajouter les lignes de code suivantes dans le fichier _netrc se trouvant dans le profil utilisateur
        machine github.com
        login COMPTE_GITHUB
        password MOT_DE_PASSE

  Affichage et analyse de l'arbre Git

    Afficher l'historique des commit
      git log
      git log --pretty=oneline
      git log --pretty=format:"%h %ad | %s%d [%an]" --graph --date=short
      git log --pretty=format:\"%h %ad | %s%d [%an]\" --graph --date=short --all
      git log --graph --all --oneline --decorate
      git reflog

      Principaux formats
      +--------+-------------------------------------------------+     +--------+-------------------------------------------------+
      | Format | Description                                     |     | Format | Description                                     |
      +--------+-------------------------------------------------+     +--------+-------------------------------------------------+
      |   %H   | Commit hash                                     |     |   %an  | Author name                                     |
      |   %h   | Abbreviated commit hash                         |     |   %ae  | Author e-mail                                   |
      |   %T   | Tree hash                                       |     |   %ad  | Author date (format respects the –date= option) |
      |   %t   | Abbreviated tree hash                           |     |   %ar  | Author date, relative                           |
      |   %P   | Parent hashes                                   |     |   %cn  | Committer name                                  |
      |   %p   | Abbreviated parent hashes                       |     |   %ce  | Committer email                                 |
      |   %s   | Subject                                         |     |   %cd  | Committer date                                  |
      |        |                                                 |     |   %cr  | Committer date, relative                        | 
      +--------+-------------------------------------------------+     +--------+-------------------------------------------------+

    Connaitre les "parent number" d'un merge
      git show --pretty=raw SHA1 (cette commande affiche les parents dans l'ordre, le premier indice étant 1)

    Afficher l'historique des commit (version graphique)
      gitk
      gitk --all

    Afficher les différences
      git diff            : différences entre le répertoire de travail et l'index (unified diff format)
      git diff -b         : idem ci-dessus mais en ignorer les espaces / retours chariot
      git diff --cached   : différences entre l'index et le repository
      git diff HEAD       : différences entre le répertoire de travail et le repository
      git diff HEAD HEAD~ : différences entre le HEAD et son parent
      git difftool        : différences en utilisant un outil de diff spécifique      
      git difftool --extcmd=diff            : différences entre le répertoire de travail et l'index (normal diff format)

    Voir sur quoi point le HEAD
      git symbolic-ref HEAD

    Afficher les dandling blob/commit
      utiliser la commande fsck (File System ChecK)
      git fsck --lost-found

    Afficher un objet Git
      git show object_sha1 (applicable également aux dangling blob et dangling commit)

  Gestion des branches

    Lister les branches
      git branch       : branches locales
      git branch -r    : branches remotes (r=remote)
      git branch -a    : branches locales et remotes (a=all)
      git branch -v    : affiche sha1 et message de commit du dernier commit de chaque branche (v=verbose)
      git branch -v -v : affiche en plus la branche d'origine

    Créer une branche
      git branch myBranch         : la nouvelle branche pointe sur le HEAD (équivalent à : git branch myBranch HEAD)
      git branch myBranch version : la nouvelle branche pointe sur la version précisée (ex : git branch myBranch HEAD~)

    Effacer une branche
      git branch -d myBranch

  Gestion des tags

    git tag v1    : créé un tag
    git tag -d v1 : supprime un tag

  Mettre des modifications de côté (= faire un stash)

    git stash                 : place les modifications locales (répertoire de travail + index) sur le dessus de la pile des stash.
                                Après exécution de cette commande, il n'y a plus de modification locale.
                                Les fichiers non suivis ne font pas parti du stash.
    git stash apply           : récupére en local le stash du dessus de la pile (qui reste sur le dessus de la pile)
                                Applique uniquement les modifications sur le répertoire de travail, mais pas sur l'index. 
    git stash apply stash@{0} : équivalent à la commande précédente
                                Toute commande de stash dont l'identifiant est omis se réfère systématiquement à apply stash@{0}
    git stash apply stash@{2} : récupère en local le 3ème stash à partir du dessus de la pile
    git stash apply --index   : Applique les modifications sur le répertoire de travail et l'index
    git stash pop             : récupère en local le stash du dessus de la pile puis supprime ce stash de la pile.
                                Equivalent à la séquence :
                                  git stash apply
                                  git stash drop
    git stash drop            : se débarrasse du stash sur le dessus de la pile des stash
    git stash drop stash@{2}  : se débarrasse du 3ème stash à partir du dessus de la pile des stash
    git stash list            : affiche la pile des stash
    git stash show  -p        : montre les modifications du stash sur le dessus de la pile
                                p = patch

  Gestion des répertoires Git distants (remote repositories) et interactions

    Lister les répertoires distants
      git remote    : liste les alias des répertoires distants
      git remote -v : liste les alias et les adresses des répertoires distants (v=verbose)

    Ajouter un répertoire distant
      git remote add  nom_repertoire_distant url_repertoire_distant

    Récupérer les modifications d'un répertoire distant
      git pull nom_repertoire_distant

    Mettre à disposition les modifications sur un répertoire distant
      git push nom_repertoire_distant nom_de_branche

  Manipulation de l'index

    Ajouter un fichier à l'index (faire un stage)
      git add nom_de_fichier

    Ajouter récursivement tous les fichiers du répertoire courant à l'index
      git add .

    Ajouter à l'index tous les fichiers modifiés déjà suivis (update)
      git add -u   (non valable en 2.0)
      git add -u . (valable également en 2.0)

    Suppression (unstage) d'un fichier de l'index
      git reset nom_de_fichier
      Remarque : pour un fichier présent dans l'index mais pas dans le dernier commit, il est également possible de faire "git rm --cached"

    Suppression (remove) d'un fichier de l'index
      git rm nom_de_fichier          : suppression (remove) du fichier dans l'index et effacement du fichier dans le répertoire de travail local
      git rm --cached nom_de_fichier : suppression (remove) du fichier dans l'index uniquement, fichier toujours présent dans le répertoire de travail local

  Modification de l'arbre Git

    Opérations de commit

      Faire un commit (ajouter les fichiers de l'index au repository)
        git commit -m "message de commit

      Modifier le message du dernier commit (non encore pushé)
        git commit --amend -m 'new message'

    Opérations de merge

      Merger une branche dans la branche courante
        git merge nom_de_branche

  Analyser le status des fichiers

    Afficher le status des fichiers
      git status
      Remarque : Cette commande ne montre pas tous les fichiers du répertoire de travail;
                 Les fichiers présents dans le dernier commit mais non modifiés n'apparaissent pas.

    Afficher la liste des fichiers suivis (tracked files)
      git ls-files

    Afficher la liste des fichiers dans le working dirctory mais non suivis (untracked)
      git ls-files --others
      Remarque : A la différence de la commande status, cette commande liste l'ensembles des enfants des répertoire non suivis

  Opérations sur le HEAD

    Déplacer le HEAD et la branche courante sans modifier l'index ni le répertoire de travail
      git reset --soft version
      Ainsi, git reset --soft HEAD n'a aucun effet puisqu'il deplace HEAD vers HEAD et qu'il ne modifie ni l'index, ni le répertoire de travail

    Déplacer le HEAD et la branche courante en modifiant l'index mais pas le répertoire de travail
      git reset version
      git reset --medium version

    Déplacer le HEAD et la branche courante en modifiant l'index et le répertoire de travail
      git reset --hard version

    Déplacer la branche courante (et le HEAD associé)
      git reset v1
      git reset sha1

    Annuler l'opération d'ajout d'un fichier à l'index
      git reset HEAD nom_de_fichier

  Gestion des merges

    Lancer l'outil de résolution des conflits
      git mergetool (à lancer une fois la commande merge exécutée)


  Récupérer localement la version pointée par le HEAD
    git checkout nom_de_fichier

  Références
    Guide synthétique               : http://gitref.org/
    Pro Git                         : http://git-scm.com/book
    Commande reset                  : http://git-scm.com/2011/07/11/reset.html
    Git Community Book en français  : http://alx.github.com/gitbook/index.html
    Tutorial "Immersion"            : http://gitimmersion.com
    Tutorial "Git c'est facile 2"   : http://www.yterium.net/GIT-c-est-facile-2
    Tutorial "Git ready"            : http://gitready.com
    Tutorial "Learn GitHub"         : http://learn.github.com/p/intro.html
    Tutorial "Learn GitHub" (suite) : http://learn.github.com/p/diff.html
    Tutorial                        : https://www.atlassian.com/fr/git/tutorial/
    Utiliser Git en entreprise      : http://canop.org/blog/?p=101
    A Visual Git Reference (+++)    : http://marklodato.github.com/visual-git-guide/index-en.html
    Understanding Git Conceptually  : http://www.sbf5.com/~cduan/technical/git/
    Fast-forward                    : http://tech.m6web.fr/tentative-d-explication-des-fast-forward-sous-git/
    use gitk to understand git      : http://lostechies.com/joshuaflanagan/2010/09/03/use-gitk-to-understand-git/
                                      http://lostechies.com/joshuaflanagan/2010/09/03/use-gitk-to-understand-git-merge-and-rebase/
    Recovering lost commits         : http://www.programblings.com/2008/06/07/the-illustrated-guide-to-recovering-lost-commits-with-git/
    Git internals                   : https://github.com/pluralsight/git-internals-pdf/releases/download/v2.0/peepcode-git.pdf
    Git diff (gitguys)              : http://www.gitguys.com/topics/git-diff/
    Liste des principales commandes : http://www.siteground.com/tutorials/git/commands.htm
    Memo Git                        : http://blog.adrien-robert.me/2011/02/19/un-memo-pour-git/

-------
- SQL -
-------
  sélectionner le maximum d'une colonne en fonction d'une autre colonne
    Exemple
        create table max_test(code varchar(3), value int)
        insert into max_test(code, value) values ('A', 3)
        insert into max_test(code, value) values ('A', 5)
        insert into max_test(code, value) values ('B', 4)
        insert into max_test(code, value) values ('C', 6)
        insert into max_test(code, value) values ('C', 7)
        insert into max_test(code, value) values ('C', 5)

    select code, max(value) from max_test group by code

  écrire un case dans un select
    case
        when condition_1 then   value_1
        when condition_2 then   value_2
        ...
        when condition_n then   value_n
        else                    value_else
    end

----------
- SYBASE -
----------
  Vérifier l'existence d'une table
    if exists(select 1 from sysobjects where type = 'U' and name = 'nom_de_table')

  Vérifier l'existence d'une procédure stockée
    if exists(select 1 from sysobjects where type = 'P' and name = 'nom_de_procedure')

  Vérifier l'existence d'une table temporaire
    if exists(select 1 from tempdb..sysobjects where substring(name, 1, len('#INDEX_LIST')) = '#INDEX_LIST' and type = 'U')
    if object_id("#TEMP_TABLE") is not null

  Détruire une table temporaire (script n'échouant pas même si la table n'existe pas)
   if object_id("#TEMP_TABLE") is not null
    begin
      drop table #TEMP_TABLE
    end

  Déclarer une variable
    declare @nom_de_la_variable type_de_la_variable
    exemple : declare @ptf_cod varchar(12)

  Affecter une valeur constante à une variable
    select @nom_de_la_variable = @valeur_de_la_variable
    exemple : select @ptf_cod = 'ZX23'

  Voir le code d'une procédure stockée
    sp_helptext 'nom_de_procedure'

  Obtenir la liste des utilisateurs
    sp_helpuser

  Obtenir la liste des groupes
    sp_helpgroup

  Vérifier la nullité d'une variable
    if( @nom_de_la_variable is null)...

  Vérifier la non nullité d'une variable
    if( @nom_de_la_variable is not null)...

  Trouver l'index d'un caractère dans une chaîne de caractères
    utiliser la fonction charindex

  Extraire une sous-chaîne d'une chaîne de caractères
    utiliser la fonction substring

  Remplacer une sous-chaîne d'une chaîne de caractères
    utiliser la fonction stuff

  Ajouter à une base un groupe défini sur le data serveur
    sp_addgroup 'nom_de_groupe'

  Connaître le nom réel d'un base (renvoyé par les messages d'erreurs Sybase)
    select @@servername

  Le fichier sql.ini
    Les adaptive server (également appelés data server dans cette page, par opposition aux serveurs physiques) sont définis dans le fichier sql.ini(présent par exemple dans C:\Program Files\sybase\12.5.1\ini).
    Ils sont définis suivant le template :
      [DATA_SERVEUR_NAME]
      query=TCP,server-name,port
    Dans l'exemple, server-name est le nom ou l'alias d'une machine
    Un data serveur peut héberger plusieurs bases
    Si A et B sont 2 bases sur un même data server, et si a est un objet de A et b un objet de B, a peut référencer b en utilisant la syntaxe B..b

  L'outil isql
    Outil Sybase permettant l'exécution d'un script sql via la syntaxe :
      isql -UUSER -PPASSWORD -SDATA_SERVER -DBASE -i C:\Temp\sql\script.sql
      Le fichier d'entrée (ex: script.sql) passé à isql peut inclure un fichier (ex : include.sql) à l'aide de la syntaxe :
          :r C:\Temp\include.sql
      Il ne doit pas y avoir d'espace entre le début de la ligne et le :r

  L'outil bcp
    Outil Sybase permettant de sauvegarder les données d'une table dans un fichier, ou d'alimenter une table à partir des données d'un fichier.
    Sauvegarde des données d'une table
        bcp BASE..TABLE out C:\...\file.csv -U USERNAME -P PASSWORD -S DATASERVER -t ";" -c
    Alimentation d'une table à partir d'un fichier
        bcp BASE..TABLE in C:\...\file.csv -U USERNAME -P PASSWORD -S DATASERVER -t ";" -c

  Système de verrouillage de table
    Une table est composée de pages. Une page est composées de lignes (row).
    Il existe différents systèmes de verrouillage d'une table.
      Allpages locking    : vérouille l'intégralité de la table lors d'une modification de celle-ci (tout select est mis en attente pendant la mise à jour).
                            c'est le système de verrouillage par défaut d'une table.
      Datapages locking   : système de verrouillage d'une table dans lequel toutes les pages contenant les lignes en cours de modifications sont verrouillées.
      Datarows locking    : système de verrouillage d'une table dans lequel toutes les lignes en cours de modifications sont verrouillées.
                            Il existe un nombre maximal de verrous sur une base Sybase.
                            Utiliser des verrous de type Datarows permet une granularité plus fine de verrouillage mais accroît les risques d'atteindre la limite maximale du nombre de verrous (du fait de l'attribution d'un verrou à chaque ligne modifiée)

-------
- DOS -
-------
  Lister récursivement les fichiers d'un répertoire
    dir /S /A:-D /B
    /S (subdirectories) : permet la récursion sur les sous-répertoires
    /A (attribute)      : -D signifie ne possédant pas l'attribut "Directory"
    /B (bare format)    : présente seulement les noms de fichiers sans formattage (format nu)

  Lister les répertoires
    dir

  Créer un répertoire
    mkdir nom_de_repertoire

  Changer de répertoire
    cd nom_de_repertoire

  Afficher le contenu d'un fichier
    more nom_de_fichier

  Créer un fichier
    echo "contenu du fichier" > nom_de_fichier

  Commande externe
    Une commande non incluse dans command.com
    Voir http://www.computerhope.com/jargon/e/extecomm.htm

  Less
    programme de mise en page (pager) par défaut utilisé par les fenêtres DOS.
    Less peut utiliser les variables d'environnement LESSCHARSET et LESSCHARDEF.
    FAQ sur Less : http://www.greenwoodsoftware.com/less/faq.html

  LESSCHARSET
    Variable d'environnement lue par Less qui permet de préciser le jeux de caractère prédéfini à utiliser.
    Valeurs possibles   : ascii, iso8859, latin1, dos, ebcdic, koi8-r, utf-8
    Exemple             : set LESSCHARSET = latin1

  LESSCHARDEF
    Variable d'environnement lue par >Less, permettant de définir un jeux de caractères
    La chaîne de caractère affectée à cette variable défini le type des caractères de 0 à 255.
    Liste des caractères possibles
      +-----------+-----------------------+
      | Caractère | Signification         |
      +-----------+-----------------------+
      |      .    | caractère normal      |
      |      c    | caractère de contrôle |
      |      b    | binaire               |
      +-----------+-----------------------+
    Chacun des caractères ci-dessus peut être précédé par un nombre indiquent sur combien de caractères porte le caractère suivant dans la chaîne
    Exemple
      le jeu prédéfini ascii correspond à 8bcccbcc18b95.b (caractères : 8 binaires + 3 contrôles + 1 binaire + 2 contrôles + 18 binaires + 95 normaux + 1 binaire soit 128 caractères définis)

---------------------
- Patch de fichiers -
---------------------

  Formats de patchs
    Normal diff
    Context diff
    Unified diff

  Références : http://www.markusbe.com/2009/12/how-to-read-a-patch-or-diff-and-understand-its-structure-to-apply-it-manually/

-----------
- Clavier -
-----------
  Basculer entre anglais et français
    ALT + SHIFT

  Références
    Raccourcis clavier d'Internet Explorer : http://windows.microsoft.com/fr-BE/windows-vista/Internet-Explorer-8-keyboard-shortcuts

--------------------------------
- RegExp (expression régulière)-
--------------------------------
  IntelliJ
      \t : matche avec les tabulations
      \r : non reconnu
      \n : matche avec la séquence de fin de ligne (\r\n sous Windows et \n sous Unix)
      Remplacement : $1

  Notepad++
      \t : matche avec les tabulations
      \r : non reconnu
      \n : non reconnu
      Remplacement : \1

  Trouver les caractères de mots qui ne sont pas des chiffres : [^\W\d]
      Le symbole indiquant la négation porte sur l'ensemble des caratères qui suivent.
      L'expression signifie donc non(\W ou \d) soit non(\W) et non(\d) c'est-à-dire \w et non(\d).

  Expressions régulières applicable à cette page
    Recherche des rubriques dans cette page
      ^-\s.+\s-$

    Recherche des sujet dans cette page
      ^  \w

    Recherche des espaces de fin de ligne
      \s+$

-----------
- Anglais -
-----------
  Pluriel :
    - en anglais  : tout ce qui est différent de 1
    - en français : commence à partir de 2
    Références :
      https://www.druide.com/enquetes/15-gramme-ou-15-grammes

------------
- Français -
------------
  Définition : http://www.lexilogos.com/francais_langue_dictionnaires.htm

  +--------------+-------------------------------------------------------------------------------+
  | mot          | définition                                                                    |
  +--------------+-------------------------------------------------------------------------------+
  | atermoiement | (souvent au pluriel) action de différer, retarder; hésitation, tergiversation |
  +----------------------------------------------------------------------------------------------+

  Expressions
    à nouveau / de nouveau
      "à nouveau"  signifie "d'une nouvelle façon"
      "de nouveau" signifie "de la même façon"
      Exemples :  J'ai raté ce dessin, je vais le faire à nouveau  : d'une nouvelle façon, donc il a plus de chance d'être réussi.
                  J'ai raté ce dessin, je vais le faire de nouveau : de la même façon, donc il sera encore raté.

    d'avance / par avance
      "par avance" est plus littéraire que "d'avance"

    entre autres
      "autres" prend un "s"

    se rappeler / se souvenir
      cf : http://www.pincetonfrancais.be/v1/article.php3?id_article=4

  Références
    http://www.cnrtl.fr/definition/
    http://www.projet-voltaire.fr/blog/

-------
- XML -
-------

  Testeurs Xslt online
    mark bucayan : http://markbucayan.appspot.com/xslt/index.html
    xslt cake : http://www.xsltcake.com

  Validateur XSD online
    Xsd online validator : http://www.corefiling.com/opensource/schemaValidate.html

--------
- Java -
--------

  Jvm
    Java virtual machine (machine virtuelle java)

  Outils d'analyse d'une jvm
    VisualVM
    JConsole : permet en particulier de détecter les deadlock

  Classpath
    Ensemble de chemins utilisés par la jvm pour localiser les différentes ressources (dont les classes).
    Un classpath peut contenir : des noms de jar; des répertoires (dans ce cas, le répertoire en question doit contenir des .class au sein de sous-répertoires reproduisant l'arborescence des packages).

  Class literal
    Tout objet qui représente une classe (par exemple String.class)

  Reifiable type
    Un type "réifiable" est un type dont toute l'information de type est disponible à l'exécution. Un exemple de type non "réifiable" : List<String>, car ne sont disponible à l'exécution que les informations de List. Les tableaux et l'opérateur instanceof peuvent s'appliquer uniquement à des types réifiables.

  Paramètre et argument
    Un paramètre est une variable qui fait partie de la déclaration d'une méthode (signature de la méthode).
    Un argument est une expression utilisée lors de l'appel de la méthode.
    Exemple :
      void method(int i, float f)
      {
          // Do things
      }

      void Bar()
      {
          int anInt = 1;
          method(anInt, 2.0);
      }

      Dans cet exemple, i et f sont des paramètres et anInt et 2.0 sont des arguments.

  Multithreading
    Références :
      http://rom.developpez.com/java-synchronisation/ (+++)
      http://architects.dzone.com/articles/how-analyze-java-thread-dumps

  Threads
    Status :
      NEW           : le thread est créé mais ne s'exécute pas.
      RUNNABLE      : le thread occupe la CPU et s'exécute.
      BLOCKED       : le thread attend qu'un autre thread relache un lock.
      WAITING       : le thread est en attente (par appel d'une méthode wait, join ou park)
      TIMED_WAITING : comme WAITING, mais avec un timeout
      TERMINATED    : le thread est terminé

    Type :
      Non-Daemon : thread dont la durée de vie n'est pas liée aux autres thread. C'est le type de thread exécutant la méthode main.
      Daemon     : les daemon threads s'arrêtent lorsqu'il n'y a plus de non-daemon thread.

    Nom de thread :
      - Thread-(Number)               si le thread est un Java.lang.Thread
      - pool-(number)-thread-(number) si le thread a été créé par la classe java.util.concurrent.ThreadFactory

    Thread dump :
      - Photographie de l'état des threads d'un programme à un moment donné.
      - Obtenu grâce à des outils comme jVisualVM.
      - dans un thead dump :
        ->          locked <XXX> signifie que le thread détient actuellement le lock <XXX>
        -> waiting to lock <XXX> signifie que le thread attend la libération du lock <XXX>

    Obtenir des informations sur les threads via le code
      Utiliser l'interface de gestion des threads ThreadMXBean.
      Une instance de cette classe peut être obtenue via la classe ManagementFactory, permettant également d'obtenir d'autres interfaces de gestion (comme la mémoire par exemple)
      Exemple :
        ThreadMXBean mxBean = ManagementFactory.getThreadMXBean();
        long[] threadIds = mxBean.getAllThreadIds();
        ThreadInfo[] threadInfos = mxBean.getThreadInfo(threadIds);

  Méthodes de synchronisation
    Mot clé synchronized :
      - sur une instance d'objet final
          synchronized(unObjet) {
            //section critique
          }
      - dans la signature d'une méthode : dans ce cas, l'objet en question est this
         -----------------------------------                                              ----------------------------
         |  synchronized void methode() {  |                                              |  void methode() {        |
         |    //section critique           |         qui est strictement équivalent à     |    synchronized(this) {  |
         |  }                              |                                              |      //section critique  |
         -----------------------------------                                              |    }                     |
                                                                                          |  }                       |
                                                                                          ----------------------------
    Classe Object :
      - wait :
          -> libère le verrou acquis par l'entrée dans un bloc synchronize
          -> bloquant tant qu'un notify (sur le même objet) ne le débloque pas
          -> à la sortie d'un wait(), le thread peut à nouveau tenter d'acquerir l'objet de lock
      - notify    : réveille un unique thread bloqué sur la méthode wait sur le même objet de lock
      - notifyAll : réveille tous les thread bloqués sur la méthode wait sur le même objet de lock
    Classe Thread :
      - join : aThread.join() provoque l'attente bloquante de la fin de l'éxécution de la méthode run du thread aThread
    Interface Lock :
      - lock
      - unlock
      - newCondition : crée un Condition sur ce lock (voir interface ci-dessous)
    Interface Condition (lié à l'interface Lock) :
      - await     : equivalent de wait
      - signal    : équivalent de notify
      - signalAll : équivalent de notifyAll
    Interface ReadWriteLock :
      - readLock
      - writeLock
    Classe Semaphore : décrit un système de n jetons (n a préciser au constructeur)
      - acquire
      - release
    Classe SwingUtilities :
      - invokeLater : méthode (statique) mettant dans une file d'attente une action à effectuer dans l'EDT
    Autres classes :
      - Executor : permet d'exécuter plusieurs Runnable de manière asynchrone mais dans l'ordre dans lequel ils sont appelés
      - BlockingQueue
      - ArrayBlockingQueue
    Remarques
      - Les "anciennes" collections java 1.0 (Vector, HashTable, ...) sont synchronisées
      - Les "nouvelles" collections java 1.2 (ArrayList, HashMap, ... ) ne sont pas synchronisées. On peut en récupérer une vue synchronisée via Collections.synchronizedCollection(collection)


  EDT (Event Dispatching Thread)
    Thread de Swing traitant l'ensemble des évènements.
    Toute opération graphique (création de fenêtre, ...) devrait être exécuté dans ce thread

    Référence : http://www.jguru.com/faq/view.jsp?EID=8963

  Nom de l'EDT (utile en debug)
    AWT-EventQueue-0

  Exécuter du code dans l'EDT à partir d'un autre thread
    SwingUtilities.invokeAndWait(new Runnable() {
        public void run() {
            // Code à exécuter dans l'EDT
        }
    });

  Différence de principe entre SwingWorker et SwingUtilities.invokeAndWait
    - SwingUtilities.invokeAndWait peut être appelé d'un autre thread que l'EDT pour exécuter du code dans l'EDT
    - SwingWorker peut être appelé par l'EDT pour exécuter du code ailleurs que dans l'EDT

  Pour exécuter du code qui prend un certain temps sans bloquer le raffraichissement de l'IHM, on peut :
      - soit exécuter ce code dans un thread différent de l'EDT puis appeler un SwingUtilities.invokeAndWait
      - soit utiliser un SwingWorker dans l'EDT qui exécutera de manière transparente ce code dans un thread autre que l'EDT


  Classes liées aux JTable
    +---------------------------------------------------+----------------+-----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
    | Objet                                             | Type           | Description                                                                                                                                                                                                                                   |
    +---------------------------------------------------+----------------+-----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
    | JTable                                            | classe         | vue du modèle de données                                                                                                                                                                                                                      |
    | JTable.getModel()                                 | method         | récupération du modèle de données                                                                                                                                                                                                             |
    | JTable.getSelectionModel()                        | method         | récupération du modèle de sélection                                                                                                                                                                                                           |
    | JTable.getColumnModel()                           | method         | récupération du modèle de colonnes                                                                                                                                                                                                            |
    | JTable.getTableHeader()                           | method         | récupération du JTableHeader                                                                                                                                                                                                                  |
    | JTable.setDefaultRenderer(...)                    | method         | modification du renderer par défaut d'une classe donnée                                                                                                                                                                                       |
    | JTable.getCellRenderer(int row, int column)       | method         | Sélection du renderer de la table : renvoie en priorité le renderer particulier de la colonne; sinon, utilise un renderer par défaut approprié à la classe renvoyée par TableModel.getColumnClass()                                           |
    | TableColumnModel                                  | interface      | modèle des colonnes de la table. L'ordre des colonnes dans ce modèle (column index) peut être modifié par la JTable afin de refléter l'ordre d'affichage des colonnes.                                                                        |
    | TableColumn                                       | classe         | modèle d'une colonne de la table                                                                                                                                                                                                              |
    | TableColumn.setCellRenderer()                     | method         | modification du renderer d'une colonne                                                                                                                                                                                                        |
    | TableModel                                        | interface      | modèle de données de la table                                                                                                                                                                                                                 |
    | TableModelEvent                                   | classe         | évenement de modification du modèle de données                                                                                                                                                                                                |
    | TableModelListener                                | interface      | callback de traitement des modifications d'un TableModel; gère des TableModelEvent via la méthode tableChanged()                                                                                                                              |
    | DefaultTableModel                                 | classe         | modèle de table par défaut; représente uniquement des chaînes de caractères et ne permets pas la représentation d'autre types (booléen, par exemple)                                                                                          |
    | AbstractTableModel                                | classe         | classe de base de modèle qui implémente des méthodes de notification de modification (méthodes fireTableRowsUpdated(), fireTableRowsInserted(), ... appellant la méthode TableModelListener.tableChanged avec des TableModelEvent appropriés) |
    | ListSelectionModel                                | interface      | modèle de sélection de la table (par ligne , par colonne, par cellule)                                                                                                                                                                        |
    | JTableHeader                                      | classe         | headers de la table                                                                                                                                                                                                                           |
    | TableColumnModelListener                          | interface      | callback de traitement des modifications du modèle de colonnes                                                                                                                                                                                |
    | TableColumnModelEvent                             | classe         | évenement de modification du modèle de colonnes                                                                                                                                                                                               |
    | TableCellRenderer                                 | class          | Renderer de la table,dont le rôle est de retourner un composant de rendu                                                                                                                                                                      |
    | TableCellRenderer.getTableCellRendererComponent() | method         | Sélection du composant effectuant le rendu                                                                                                                                                                                                    |
    | DefaultTableCellRenderer                          | class          | Renderer par défaut, le composant assurant le rendu des cellules étant un JLabel                                                                                                                                                              |
    | DefaultRowSorter                                  | abstract class | classe de base de TableRowSorter                                                                                                                                                                                                              |
    | TableRowSorter                                    | class          | une implémentation de RowSorter qui fournit un tri et un filtre en utilisant un TableModel                                                                                                                                                    |
    | RowSorter                                         | abstract class | base de tri et filtrage                                                                                                                                                                                                                       |
    | RowSorter.SortKey                                 | inner class    | Décrit l'ordre de tri pour une colonne                                                                                                                                                                                                        |
    | RowSorter.setSortKeys(...)                        | method         | Précise les SortKeys du RowSorter                                                                                                                                                                                                             |
    | RowFilter                                         | abstract class | Filtrage des données du modèle pour affichage dans la vue                                                                                                                                                                                     |
    | RowFilter.regexFilter(...)                        | method         | créée une instance de RegexFilter                                                                                                                                                                                                             |
    | RowFilter.dateFilter(...)                         | method         | créée une instance de DateFilter                                                                                                                                                                                                              |
    | RowFilter.numberFilter(...)                       | method         | créée une instance de NumberFilter                                                                                                                                                                                                            |
    | RowFilter.orFilter(...)                           | method         | créée une instance de OrFilter                                                                                                                                                                                                                |
    | RowFilter.andFilter(...)                          | method         | créée une instance de AndFilter                                                                                                                                                                                                               |
    | RowFilter.notFilter()                             | method         | créée une instance de NotFilter                                                                                                                                                                                                               |
    | DefaultCellEditor                                 | class          | éditeur par défaut des tables et des arbres                                                                                                                                                                                                   |
    | CellEditor.getCellEditorValue()                   | method         | doit renvoyer la valeur de l'éditeur                                                                                                                                                                                                          |
    | TableCellEditor.getTableCellEditorComponent()     | method         | doit renvoyer le composant d'édition                                                                                                                                                                                                          |
    +---------------------------------------------------+----------------+-----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+

    Définitions de (et différence entre) column index et model index
      Lors de l'assignation du TableModel à une JTable, pour chaque index i entre 0 et TableModel.getColumnCount(), un TableColumn est créé avec le nom TableModel.getColumnName(i) et avec un model index égal à i.
      De plus, ces TableColumn sont stockés dans le TableColumnModel.
      On appelle column index l'index de stockage d'un TableColumn au sein du TableColumnModel.
      Le model index d'une TableColumn ne varient jamais.
      Par contre, le column index peut varier lors d'un déplacement de colonne.
      L'ordre de stockage des TableColumn dans le TableColumnModel (column index) représente l'ordre d'affichage des colonnes par la JTable.
      Remarque : le tri de chaînes de caractères dépend de la locale

    Si l'ascenceur horizontal d'une JScrollBar contenant une JTable n'apparait pas, même quand des colonnes ne sont pas visibles dans son viewport
      Vérifier que le mode de redimensionnement de la JTable est bien en AUTO_RESIZE_OFF.
      Si ce n'est pas le cas, appeler setAutoResizeMode(JTable.AUTO_RESIZE_OFF)

  Classes liées aux JTree
    +----------------------------------------------------+--------+--------------------------------------------------------------------------------------------------------------------------+
    | Objet                                              | Type   | Description                                                                                                              |
    +----------------------------------------------------+--------+--------------------------------------------------------------------------------------------------------------------------+
    | JTree.convertValueToText(...)                      | method | Convertie le user object en texte à afficher (par défaut, le texte affiché est celui retourné par la méthode toString()) |
    | JTree.addTreeSelectionListener(...)                | method | ajout d'un listener sur les événements de sélection dans l'arbre                                                         |
    | DefaultMutableTreeNode.add(...)                    | method | ajoute un MutableTreeNode comme enfant du noeud                                                                          |
    | DefaultMutableTreeNode.getUserObject(...)          | method | renvoi l'Object passé au noeud lors de la construction ou via la méthode setUserObject()                                 |
    | TreeSelectionListener                              |        | getLastSelectedPathComponent (revoie un Object)                                                                          |
    | DefaultTreeCellRenderer.setLeafIcon(...)           | method | définition de l'icône pour les noeuds feuilles                                                                           |
    | DefaultTreeCellRenderer.setOpenIcon(...)           | method | définition de l'icône pour les noeuds non feuilles ouverts                                                               |
    | DefaultTreeCellRenderer.setClosedIcon(...)         | method | définition de l'icône pour les noeuds non feuilles fermés                                                                |
    | TreeCellRenderer.getTreeCellRendererComponent(...) | method | sélection du composant effectuant le rendu                                                                               |
    | DefaultTreeModel.insertNodeInto(...)               | method | ajout d'un noeud dans le modèle                                                                                          |
    +----------------------------------------------------+--------+--------------------------------------------------------------------------------------------------------------------------+

  Classes liées aux JTreeTable
    +-----------------------------------------+-------------+------------------------------------------------------------------------------+
    | Objet                                   | Type        | Description                                                                  |
    +-----------------------------------------+-------------+------------------------------------------------------------------------------+
    | JTreeTable                              | class       | une JTable dont le renderer est un JTree                                     |
    | TreeTableCellRenderer                   | class       | Renderer du JTreeTable                                                       |
    | TreeTableModel                          | interface   | Modèle du JTreeTable                                                         |
    | TreeTableModelAdapter                   | class       | un AbstractTableModel faisant le lien avec le TreeTableModel                 |
    | JTreeTable.TreeCellRendererAdapter      | inner class |                                                                              |
    | AbstractCellEditor.fireEditingStopped() | method      | à appeler à la fin de l'édition pour que le renderer soit de nouveau affiché |
    +-----------------------------------------+-------------+------------------------------------------------------------------------------+

  Gestion des évènements par la classe Component
    +-------------------------+---------------------+--------------------------------------------+------------------------+
    | Listener                | Event traité        | méthode d'ajout du Listener dans Component | méthodes du listener   |
    +-------------------------+---------------------+--------------------------------------------+------------------------+
    | ComponentListener       | ComponentEvent      | addComponentListener                       |                        |
    |                         |                     |                                            | componentResized       |
    |                         |                     |                                            | componentMoved         |
    |                         |                     |                                            | componentShown         |
    |                         |                     |                                            | componentHidden        |
    | FocusListener           | FocusEvent          | addFocusListener                           |                        |
    |                         |                     |                                            | focusGained            |
    |                         |                     |                                            | focusLost              |
    | HierarchyBoundsListener | HierarchyEvent      | addHierarchyBoundsListener                 |                        |
    |                         |                     |                                            | ancestorMoved          |
    |                         |                     |                                            | ancestorResized        |
    | HierarchyListener       | HierarchyEvent      | addHierarchyListener                       |                        |
    |                         |                     |                                            | hierarchyChanged       |
    | InputMethodListener     | InputMethodEvent    | addInputMethodListener                     |                        |
    |                         |                     |                                            | inputMethodTextChanged |
    |                         |                     |                                            | caretPositionChanged   |
    | KeyListener             | KeyEvent            | addKeyListener                             |                        |
    |                         |                     |                                            | keyTyped               |
    |                         |                     |                                            | keyPressed             |
    |                         |                     |                                            | keyReleased            |
    | MouseListener           | MouseEvent          | addMouseListener                           |                        |
    |                         |                     |                                            | mouseClicked           |
    |                         |                     |                                            | mousePressed           |
    |                         |                     |                                            | mouseReleased          |
    |                         |                     |                                            | mouseEntered           |
    |                         |                     |                                            | mouseExited            |
    | MouseMotionListener     | MouseEvent          | addMouseMotionListener                     |                        |
    |                         |                     |                                            | mouseDragged           |
    |                         |                     |                                            | mouseMoved             |
    | MouseWheelListener      | MouseWheelEvent     | addMouseWheelListener                      |                        |
    |                         |                     |                                            | mouseWheelMoved        |
    | PropertyChangeListener  | PropertyChangeEvent | addPropertyChangeListener                  |                        |
    |                         |                     |                                            | propertyChange         |
    +-------------------------+---------------------+--------------------------------------------+------------------------+

  Effectuer un traitement à la fermeture d'un JInternalFrame
    Passer une instance de javax.swing.event.InternalFrameAdapter à la méthode JInternalFrame.addInternalFrameListener(...)

  Retrouver la fenêtre (Window) dans la quelle est contenu un composant Component (c)
    SwingUtilities.getWindowAncestor(c)

  Faire passer une fenêtre w (Window) au premier plan
    w.toFront()

  Liste des méthodes liées à la comparaison d'objet (égalité, tri)
    Classe Object :
      - hashCode
      - equals
    Interface Comparable :
      - compareTo
    Iterface Comparator :
      - compare
      - equals

  Trier une liste en utilisant un comparator
    utiliser Collections.sort(...)

  Utiliser un ensemble trié
    Utiliser la classe TreeSet (qui implémente l'interface Set).
    Les éléments d'un TreeSet doivent implémenter l'interface IComparable.
    Si 2 objets égaux (au sens de la méthode compareTo) sont ajoutés au TreeSet, seul l'un d'eux sera présent dans le TreeSet.

  Chainer des comparator (c'est-à-dire, tri sur critère 1, puis critère 2, puis critère 3...)
    utiliser ComparatorUtils.chainedComparator(...)

  Inverser un comparator
    utiliser ComparatorUtils.reversedComparator(...)

  Lire les lignes d'un fichier (jdk6)
    +-----------+-----------+
    | package   | class     |
    +-----------+-----------+
    | java.lang | String    |
    | java.util | List      |
    |           | ArrayList |
    +-----------+-----------+

    public static List<String> readLines(File file) throws IOException {
        BufferedReader reader = new BufferedReader(new FileReader(file));
        List<String> lines = new ArrayList<String>();
        String line = reader.readLine();
        while (line != null) {
            lines.add(line);
        line = reader.readLine();
        }
        reader.close();
        return lines;
    }

    Pour deux fichiers contenant respectivement A\r\nB et A\r\nB\r\n, la méthode readLines renvoie une liste identique (contenant les 2 éléments A et B).

  Insérer des lignes dans un fichier (jdk6)
    +-----------+----------------+
    | package   | class          |
    +-----------+----------------+
    | java.lang | String         |
    | java.util | List           |
    | java.io   | FileWriter     |
    |           | BufferedWriter |
    +-----------+----------------+

    public static void writeLines(List<String> lines, File file) throws IOException {
        BufferedWriter writer = new BufferedWriter(new FileWriter(file));
        for (int i = 0; i < lines.size() - 1; i++) {
            writer.write(lines.get(i));
            writer.newLine();
        }
        writer.write(lines.get(lines.size() - 1));
        writer.flush();
        writer.close();
    }

    La méthode writeLines n'ajoute pas de séquence de fin de ligne après la dernière ligne

  Manipuler les listes (jdk6)
    +-----------+-----------+
    | package   | class     |
    +-----------+-----------+
    | java.lang | String    |
    | java.util | List      |
    |           | ArrayList |
    |           | Arrays    |
    +-----------+-----------+

    SimpleDateFormat sdf = new SimpleDateFormat("dd/MM/yyyy");
    Date date = sdf.parse("10/11/2011");

  Récupérer les propriétés systèmes
    +-----------+--------+
    | package   | class  |
    +-----------+--------+
    | java.lang | System |
    +-----------+--------+

    System.getProperties()

  Récupérer une liste fixe de chaînes de caractères
    +-----------+-----------+
    | package   | class     |
    +-----------+-----------+
    | java.lang | String    |
    | java.util | List      |
    |           | ArrayList |
    +-----------+-----------+

    public List<String> getAllFilePath() {
        String[] pathArray = {
            "C:\\dev\\file1.xml",
            "C:\\dev\\file2.txt"
        };
        List<String> stringList = new ArrayList<String>();
        stringList.addAll(Arrays.asList(pathArray));
        return stringList;
    }

  Modifier plusieurs fichiers
    public void process() throws Exception {
        for (String filePath : getAllFilePath()) {
            File file = new File(filePath);
            List<String> lines = readLines(file);
            List<String> processedLines = process(lines);
            writeLines(processedLines, file);
        }
    }
    getAllFilePath, readLines, writeLines sont 3 méthodes définies dans cette section
    La méthode process est la seule qui reste à définir
    D'après les remarques sur les méthodes readLines et writeLines, la lecture puis la réécriture d'un fichier se terminant par une séquence de fin de ligne aura pour conséquence la suppression de cette séquence

  Utiliser les expressions régulières (jdk6)
    +-----------------+---------+
    | package         | class   |
    +-----------------+---------+
    | java.util.regex | Pattern |
    |                 | Matcher |
    +-----------------+---------+

    public static void main(String[] args) {
        Pattern pattern = Pattern.compile("(\\w)(..)(.)");
        Matcher matcher = pattern.matcher("abcd efghijklmn");
        while (matcher.find()) {
            System.out.println("MATCH !");
            System.out.println("group()= " + matcher.group());
            System.out.println("offset before first matched character = " + matcher.start());
            System.out.println("offset after last matched character= " + matcher.end());
            System.out.println("groupCount = " + matcher.groupCount());
            for (int i = 0; i < matcher.groupCount() + 1; i++) {
                System.out.println("\tgroup(" + i + ") = " + matcher.group(i));
                System.out.println("\t\toffset before group(" + i + ") first character= " + matcher.start(i));
                System.out.println("\t\toffset after group(" + i + ") last character = " + matcher.end(i));
            }
        }
        System.out.println("modifiedString = " + matcher.replaceAll("X"));
    }

    L'éxécution du code précédent affiche la sortie suivante :
      MATCH !
      group()= abcd
      offset before first matched character = 0
      offset after last matched character= 4
      groupCount = 3
        group(0) = abcd
          offset before group(0) first character= 0
          offset after group(0) last character = 4
        group(1) = a
          offset before group(1) first character= 0
          offset after group(1) last character = 1
        group(2) = bc
          offset before group(2) first character= 1
          offset after group(2) last character = 3
        group(3) = d
          offset before group(3) first character= 3
          offset after group(3) last character = 4
      MATCH !
      group()= efgh
      offset before first matched character = 5
      offset after last matched character= 9
      groupCount = 3
        group(0) = efgh
          offset before group(0) first character= 5
          offset after group(0) last character = 9
        group(1) = e
          offset before group(1) first character= 5
          offset after group(1) last character = 6
        group(2) = fg
          offset before group(2) first character= 6
          offset after group(2) last character = 8
        group(3) = h
          offset before group(3) first character= 8
          offset after group(3) last character = 9
      MATCH !
      group()= ijkl
      offset before first matched character = 9
      offset after last matched character= 13
      groupCount = 3
        group(0) = ijkl
          offset before group(0) first character= 9
          offset after group(0) last character = 13
        group(1) = i
          offset before group(1) first character= 9
          offset after group(1) last character = 10
        group(2) = jk
          offset before group(2) first character= 10
          offset after group(2) last character = 12
        group(3) = l
          offset before group(3) first character= 12
          offset after group(3) last character = 13
      modifiedString = X XXmn

  Décompiler des classes java
    utiliser l'outil JD-GUI (http://java.decompiler.free.fr/?q=jdgui)

  Extraire un sous-tableau
    +-----------+--------+
    | package   | class  |
    +-----------+--------+
    | java.util | Arrays |
    +-----------+--------+

    Arrays.copyOfRange(T[] original, int from, int to)

  Références
    Liste des librairies tiers java : http://www.jdocs.com/page/AllLibraries
    Librairies Apache Common (Liste et documentation) : http://commons.apache.org
    Librairies Apache Common (Liste plus complète avec des références vers les sites des projets - voir "Project Website : http://projects.apache.org/indexes/alpha.html
    Librairie Apache Common Bean Utils. Une lib équivalente à BeanUtils : Beanlib : http://commons.apache.org/beanutils/commons-beanutils-1.7.0/docs/api/org/apache/commons/beanutils/package-summary.html
    Liste des projets CodeHaus : http://xircles.codehaus.org/projects
    Liste des projets dans la catégorie développement de SourceForge (voir les sous-catégories dans la partie gauche de la page + possibilité de filtrer les entrées : http://sourceforge.net/directory/development/development
    Tutorial IO : http://tutorials.jenkov.com/java-io/index.html
    Tutorial IO : http://anisfrikha.developpez.com/tutoriel/java-io/
    Tutorial JXTreeTable : http://www.informit.com/guides/content.aspx?g=java&#38;seqNum=528
    Exemples d'utilisation de JTable : http://www.java2s.com/Code/Java/Swing-Components/Grid-Table.htm
    Example TreeTable SwingX : http://www.ibm.com/developerworks/java/library/j-5things14/index.html
    Composants swing : http://docs.oracle.com/javase/tutorial/uiswing/components/index.html
    Génériques : http://docs.oracle.com/javase/tutorial/java/generics/index.html
    Génériques (2 : http://www.angelikalanger.com/GenericsFAQ/JavaGenericsFAQ.html
    Librairie SWT : http://www.eclipse.org/swt
    Librairie JUnit-Ext : http://code.google.com/p/junit-ext
    Code du JTreeTable : http://www.java2s.com/Code/Java/Swing-Components/JTreeTablecomponent.htm
    Description de la JTreeTable : http://bitguru.wordpress.com/2008/06/18/jtreetable
    Schema UML des classes liées au JTreeTable : http://www.hameister.org/JavaSwingTreeTable.html
    Synchronous versus asynchronous : http://openjavafaq.blogspot.fr/2009/07/synchronous-vs-asynchronous.html#!/2009/07/synchronous-vs-asynchronous.html
    Class Loader : http://www.ibm.com/developerworks/java/tutorials/j-classloader/index.html
    O'Reilly's CD bookshelfs : http://docstore.mik.ua/orelly/index.html
    Articles sur java (dont quiz très intéressant) : http://thecodersbreakfast.net/
    Différents moyens de filtrer une collection : http://guidogarcia.net/blog/2011/10/29/java-different-ways-filter-collection/
    Appel java en xslt : http://cafeconleche.org/books/xmljava/chapters/ch17s03.html

--------
- Unix -
--------
  shebang / sha-bang / hashbang / pound-bang / hash-exclam / hash-pling
    Ligne en début de fichier débutant par #!, indiquant au système que le fichier est un script et par quel est son interpréteur associé.

    +-------------------+------------------------------------------+
    | shebang           | language de script                       |
    +-------------------+------------------------------------------+
    | #!/bin/sh         | Bourne shell (ou autre shell compatible) |
    | #!/bin/csh        | C shell (ou autre shell compatible)      |
    | #!/usr/bin/perl   | Perl                                     |
    | #!/usr/bin/php    | PHP                                      |
    | #!/usr/bin/python | Python                                   |
    | #!/usr/bin/ruby   | Ruby                                     |
    +-------------------+------------------------------------------+

  Connaître les pourcentages d'occupation du ssytème de fichier
    Utiliser la commande "du" (disk usage)

  Connaître les tailles des systèmes de fichier
    Utiliser la commande "df" (disk free)

  Afficher les tailles des fonctions "du" et "df" au format standard (Ko, Mo)
    utiliser l'option -h (h pour human, c'est-à-dire lisible par un human)

  Connaître la position courante dans l'arborescence
    pwd

  Lister les répertoires avec les droits (user, groupe, autre)
    ls -als
----------
- Hudson -
----------
  master (maître)
    Serveur Hudson, hébergeant entre autres l'interface Web d'Hudson

  slave (esclave)
    Machine sur laquelle se font les build. Les sources sont extraites sur les machines esclaves; les goals maven sont exécutés sur les machines esclaves

  node (noeud)
    Machine maître ou esclave

  Workspace (espace de travail)
    Répertoire (sur les esclaves) où les sources sont extraites.
    Pour un projet donné, la rubrique "Espace de travail" de l'interface Web ne montre que le répertoire de l'esclave sur lequel a été effectué le dernier build.

  Jenkins
    Logiciel dont les sources sont un fork des sources d'Hudson, présentant des améliorations par rapport à ce dernier

  Associer un label à un noeud
    Hudson > nodes >  "noeud spécifique" > Configurer > Etiquette

---------
- Maven -
---------
  Afficher les dépendances définies dans les poms (en lisant uniquement les poms mais sans analyser les dépendances réelles comme le fait analyze)
    Utiliser le goal tree du plugin dependency

  Afficher les dépendances déclarées et non utilisées / non déclarées et utilisées
    Utiliser le goal analyze du plugin dependency

  Compiler des source en jdk6
    Préciser la version du jdk
    Java 6 doit être configuré sur le poste, c'est-à-dire que la variable d'environnement %JAVA_HOME% doit pointer sur le répertoire du bon jdk et le %PATH% doit contenir le chemin du répertoire bin de ce jdk.</comment>

  Références
    Repository Central Maven : http://www.sonatype.org/central

------------------
- Dactylographie -
------------------
  Conseil précision
    Garder les doigts "pliés".
    Taper avec les bons doigts sur les touches (en particulier, utiliser le petit doigt pour taper sur la touche de suppression).
    Privilégier la précision à la vitesse de frappe. Ceci permet d'éviter le recours à la touche de correction qui a pour effet de faire perdre la position de référence. En outre, plus la vitesse de frappe augmente, plus une correction coûte cher (plus de caractères à corriger).
    Ne pas enchainer trop de lettre à la suite pour ne pas perdre en précision.
    N'appuyer sur les touches que lorsque l'on est sûr de ne pas commettre d'erreur.
    Ramener régulièrement les doigt sur leur position de référence entre les frappes successives. Ceci permet d'accroitre la précision des frappes.
    Décaler légèrement la main en quittant temporairement la position de référence pour appuyer sur les touches les moins accessibles (comme le w par exemple).

  Conseil vitesse
    Prendre plus de temps sur les mots complexes et accélérer sur les mots simples (the, of, ...) ou les groupes de lettres (ou, on, ...)

  Conseil rythme de frappe
    Découper mentalement le mot à taper en groupes cohérents de lettres.
    Ne faire des accélérations que sur des groupes de 3 lettres maximum.

  Comment taper les caractères ne correspondant à aucune touche ?
    1/ maintenir la touche ALT enfoncée
    2/ taper le code correspondant (voir tableau ci-dessous) en utilisant le clavier numérique
    3/ puis relacher la touche ALT

    +-----------+--------------+
    | Caractère | Code associé |
    +-----------+--------------+
    |     œ     |     0156     |
    |     À     |     0192     |
    |     Ç     |     0199     |
    +-----------+--------------+

  Références
    Liste de codes des caractères : http://www.toutimages.com/codes_caracteres.htm

----------------
- Sténographie -
----------------
  Références
    Abréviations courantes    : http://monsu.desiderio.free.fr/atelier/abrevia.html
    Abréviations courantes MR : http://fr.wikipedia.org/wiki/MR

------------
- Sécurité -
------------
  Clés asymétriques
    La propriété des clés asymétriques est qu'un message chiffré par une clé publique n'est lisible que par le propriétaire de la clé privée correspondante.
    À l'inverse, un message chiffré par la clé privée sera lisible par tous ceux qui possèdent la clé publique.
    Ainsi, le détenteur de la clé privée peut signer les messages qu'il envoi et lire les messages qui lui sont adressés.

  Cas de l'autenthification sur un serveur
    Un couple (clé publique, clé privé) est généré.
    La clé publique est déployé sur le serveur.
    L'utilisateur conserve sa clé privée, qu'il utilise lorqu'il veut se connecter.
    Il y a autant de couple (clé publique, clé privé) que d'utilisateur.

  Références
    Convivialité des mots de passe                      : http://www.baekdal.com/insights/password-security-usability
    Convivialité des mots de passe (FAQ)                : http://www.baekdal.com/insights/the-usability-of-passwords-faq
    Comprendre et maîtriser les clés SSH                : http://www.git-attitude.fr/2010/09/13/comprendre-et-maitriser-les-cles-ssh
    L’importance de la taille des clés en cryptographie : http://blogresearch.smalsrech.be/?p=4299
    Signature numérique                                 : http://fr.wikipedia.org/wiki/Signature_num%C3%A9rique
    Certificat électronique                             : http://fr.wikipedia.org/wiki/Certificat_%C3%A9lectronique

--------------
- Confluence -
--------------
  Créer une section que l'on peut masquer / afficher
    1/ Déclarer le plugin composition-setup en début de page :
      {composition-setup}
      cloak.toggle.type = default
      cloak.toggle.open = +
      cloak.toggle.close = -
      {composition-setup}
    2/ Créer la section :
      {toggle-cloak:id=Step1}{*}capture d'écran*
      {cloak:id=Step1|visible=false} !horodate.PNG|align=center!
      {cloak}


---------
- Excel -
---------
  Différence entre 2 dates
    Utiliser la fonction "cachée" (c'est-à-dire non documenté) DATEDIF

-----------
- Outlook -
-----------
  Raccourci pour la complétion de nom
    CTRL + K

---------
- Droit -
---------
  RTT (Syntec)
    En forfait jour, le nombre de RTT est défini comme le nombre de jours qui fait en sorte qu'un cadre travaille 218.
    On a donc : nb jours année - nb samedis/dimanches - nb jours fériés - nb RTT = 218
    On parle de "forfait jour" pour les cadres (218 jours)
    218 jours = 217 jours + 1 jour au titre de la journée de la solidarité
    2 logiques possibles :
      - Logique d'acquisition (acquisition progressive, au réél) : le droit aux jours de RTT s'acquiert en fonction de la durée réelle de travail
      - Logique forfaitaire (acquisition forfaitaire) : Le nombre de jours ou demi-journées de RTT est déterminé une fois pour toutes de façon forfaitaire en début d'année et les absences n'ont pas d'incidence sur ce nombre de jours.
    Remarque : calcul de Rtt parfois arrondi à la journée.demi-journée supérieure

    Exemple d'absence
      Vos salariés bénéficient de 16 jours de RTT dans l’année. Ils travaillent 212 jours sur l’année. L’un d’entre eux est malade pendant 1 mois, ce qui représente 20 jours de travail.
      Il n’aura plus droit qu’à : [(212 – 20) / 212] x 16 = 14,49 jours de RTT sur l’année (à arrondir, en fonction de l’accord, à la journée ou à la demi-journée supérieure).

    Exemple d'absence
      Une entreprise travaille 203 jours dans l'année et accorde 22 jours de RTT. Par conséquent, un jour de RTT est dû pour 9,227 jours de travail (203/22).
      Un salarié absent 12 jours a droit à : (203 - 12)/9,227 = 20,70 jours de RTT.

    Références
      http://www.syntec-ingenierie.fr/social-et-formation/ressources-de-droit-social/faq/duree-de-travail/
      http://www.developpez.net/forums/d1004654/emploi-etudes-informatique/droit-travail/conges/calcul-rtt-cadre-modalite-2-a/
      http://forum-juridique.net-iris.fr/travail/155403-syntec-cadre-forfait-hebdo-218-jours-an.html
      http://www.withyou.fr/withyou-2012/component/zoo/item/les-rtt
      http://www.journaldunet.com/management/pratique/conges/5018/calcul-des-jours-de-rtt.html
      http://www.wk-rh.fr/preview/BeDhHlCfJnJmEiBeImCf/editionXHTML/glpq/110-150_-_jours_de_rtt_sur_l_annee__comment_calculer_les_heures_supplementaires_et_quelle_est_l_incidence_des_absences_/110-150_-_jours_de_rtt_sur_l_annee__comment_calculer_les_heures_supplementaires_et_quelle_est_l_incidence_des_absences_
      http://www.wk-rh.fr/preview/BeDhHlDgJnAdKqGjGjKp/editionXHTML/lpaye/505-2_-_modalites_d_acquisition_des_jours_de_rtt/505-2_-_modalites_d_acquisition_des_jours_de_rtt
      http://www.wk-rh.fr/preview/FiOsHlBhHnAd/edition/gldtq/droit_du_travail_au_quotidien/120-160_comment_organiser_la_rtt_par_l_attribution_de_jours_de_repos_sur_l_annee_
      http://aca-ce.fr/calcul-rtt/
      http://psa.unsa.org/Texte-pdf/TravCadr.pdf
      http://www.fr.adp.com/adp-actualites-evenements/actualite-sociale/conges/mai-2012-acquisition-jours-rtt-pendant-conge-maternite
      http://www1.editions-tissot.fr/actualite/droit-du-travail-article.aspx?secteur=PME&id_art=1354&titre=Jours+de+RTT%E2%80%A6+comment+les+calculer+%3F
      http://www.cfdt-accenture.org/web/all_workforces_all_levels/5-mes-actualites.php?item=159
      http://www.cfecgc-valenciennes.org/article-salaries-en-forfait-jour-les-rtt-ne-peuvent-pas-etre-proratisees-en-cas-d-arret-maladie-93038299.html
      http://avocats.fr/space/carolevercheyregrard/content/_612F159D-1071-45CF-BA13-5A36BEFA3668

  Références
    Comprendre nos impôts                   : http://www.yterium.net/Comprendre-nos-impots
    Distribution des niveaux de vie en 2009 : http://www.insee.fr/fr/themes/tableau.asp?reg_id=0&amp;ref_id=NATnon04247
    Test salaire                            : http://www.inegalites.fr/spip.php?page=salaire

-------------
- Technique -
-------------
  Batteries Lithium-Ion : http://ecoinfo.cnrs.fr/article209.html
                          http://www.tomshardware.fr/articles/Li-ion-batterie-conservation-entretiens-fabrication,2-396.html

  Port USB
    Les connecteurs de type A sont du côté du "host device" (qui fournissent l'énergie).
    Les connecteurs de type B sont du côté du dispositif recevant l'énergie.
    La raison de l'existence de ces 2 types de connecteurs permettent d'éviter de connecter entre eux 2 "host device".
    Références : http://en.wikipedia.org/wiki/USB

  Connectique video
    Références : http://www.figer.com/Publications/prises.htm

-------------
- Logiciels -
-------------
  Références
    5 alternatives gratuites à Visio : http://maketecheasier.com/5-best-free-alternatives-to-microsoft-visio/2012/01/20

-----------
- Finance -
-----------
  Différence cotation "en pièce" / "en nominal"
    - les obligations sont côtées "en nominal", c'est-à-dire que la cotation d'une obligation est exprimée en pourcentage de son nominal.
      La quantité est le nombre d'obligations possédées.
    - les actions sont cotés "en pièce", c'est-à-dire que la cotation d'une action est exprimée en devise, et donne le prix d'une action.
      La quantité est le nombre d'action possédées.

  Références
    - Econoclate, l'économie pour les nuls et les autres (en particulier, rubrique "Questions et réponses") : http://econo.free.fr/