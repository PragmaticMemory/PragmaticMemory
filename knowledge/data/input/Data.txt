Mise en page
------------
    Nombre de caractère par ligne à l'écran :
        La mesure a été effectuée de la manière suivante
            - affichage de Notepad++ en plein écran 
            - fichier > Nouveau 
            - décompte du nombre de caractère de la première ligne pouvant être affichés sans scroller
        Résultat :
            écran large    (1680 x 1050) : 203
            écran standard (1280 x 800)  : 153
    Template de tableau :
        +-----------+----------+
        | header 1  | header 2 |
        +-----------+----------+
        |           |          |
        |           |          |
        |           |          |
        +-----------+----------+
    Marqueur du nombre de caractères :
                                              50>                                              100>                                              150>
Tâches
------
    A faire :
        - Mise à jour de la rubrique "Séparation" (plus de fichier de link, 2 xslt, ...)
        - Gérer les tag reference au lieu des tag link uniquement ?
        - Compléter le fichier de données avec la liste de mots en français
        - Compléter le fichier de données avec la liste de mots en anglais
        - Rédiger la xsd validant Data.xml

    Fait :
        - Afficher les packages / classes sous forme de tableaux dans la section java
        - Trouver le moyen le plus simple d'appliquer une xslt à un xml : Ecriture d'une classe java
        - Ecrire une xslt de vue et une xslt de media appelables successivement
        - Trouver un moyen de stoker le code : GitHub
        - Gérer l'imbrication de code dans un tableau dans Wikispaces
        - Rédiger les fichiers xml correspondant aux pages existantes sur PragmaticMemory.wikispaces
        - Rédiger les fichiers xslt de mise en page au format wikispaces
        - Choix du lieu de stockage des fichiers de données (xml), styles (xslt) et schemas (xsd)
            -> Wikispaces
                avantages       : Wiki gratuit pour un usage privé
                inconvénients   : les versions des fichiers téléchargés dans Wikispaces ne peuvent pas être supprimées. Conséquence : la limite de taille risque d'être atteinte rapidement si les mises à jour sont fréquentes.
            -> Google Docs
                avantages       : Gratuit
                inconvénients   : Site non accessible à partir du bureau
            -> Digiposte
                avantages       : Gratuit
                                  Structure ayant plus de chance de durer que d'autre sites
                inconvénients   : Pas de gestion de version : deux fichiers avec un nom identique sont stockés comme deux fichiers différents
        - Séparer les données du formattage : Utilisation des xslt
        - Séparer le formattage lié à la vue du formattage lié au media de diffusion : Création de xslt de vue et de xslt de media
        - Gérer les indentations de ligne de code
        - Gérer le language (java, sql,...) dans la balise de code

Principes
---------
    L'objectif de cette section est de lister les principes permettant d'améliorer la forme du wiki, afin d'éliminer tout ce qui n'est pas indispensable ou qui peut minimiser la compréhension.

    Clarté
        - de formulation :
            Entre deux formulations d'une même information, utiliser la plus claire.
            (à développer) Utiliser la mise en forme pour permettre une distinction des types d'information

    Homogénéité
        - de forme :
            Utiliser la même forme pour transmettre un même type d'information.
            voir l'utilisation
                -> des temps (futur, présent, ...)
                -> de la casse (majuscule ou minuscule)
                -> de la ponctuation
        - de terme :
            Utiliser toujours les mêmes termes pour désigner une même notion.

    Séparation
        - des Données / présentation :
            Distinguer les informations utiles (données à transmettre) de la mise en page (manière de transmettre les données).
            Il est ainsi possible d'avoir différentes vues d'un même ensemble de donnée, les différentes vues pouvant être destinées :
                -> à un rendu par différents outils (wikispaces, wikipedia, navigateur web, ...)
                -> à insiter sur différents aspects d'un ensemble de données au sein d'un même outil
            La mise en oeuvre de ce principe est faite par l'utilisation 3 types de fichiers sont utilisés :
                -> un fichier de "données", d'extension xml, stockant les données utiles
                -> des fichiers "style", d'extension xslt, définissant chacun un style de présentation
                ->  des fichiers "link", d'extension xml, chancun associant le fichier de données à un fichier de style
            Format du fichier de lien
                <?xml version="1.0" encoding="UTF-8"?>
                <?xml-stylesheet href="StyleUrl" type="text/xsl" ?>
                <!DOCTYPE linkedData [<!ENTITY data SYSTEM "DataUrl">]>
                <linkedData>
                &data;
                </linkedData>
                avec à remplacer dans le template (+ exemple dans le cas de Subversion):
                    -> StyleUrl : adresse Wikispaces du fichier xslt (http://pragmaticmemory.wikispaces.com/file/view/SubversionWikispaces.xsl/353079998/SubversionWikispaces.xsl)
                    -> DataUrl : adresse Wikispaces du fichier xml (http://pragmaticmemory.wikispaces.com/file/view/Subversion.xml/353000074/Subversion.xml)
                    -> Exemple : dans le cas de la page Subversion, Wikispaces.xml associe le fichier de données de Data.xml à la feuille de style Wikispaces.xslt
            Les fichiers xml doivent être encodés en UTF-8.
            Concernant les liens vers les pièces jointes Wikispaces contenant les versions de ces fichiers :
                -> toute mise à jour du fichier de données nécessite la mise à jour de tous les fichiers de link
                -> toute mise à jour d'un fichier de vue nécessite la mise à jour du fichier link associé
        - des concepts dans les métadonnées :
                Liste des concepts : item, group, reference, method, task

    Concision : 
        - de taille :
            Entre deux formulations aussi claire d'une même information, utiliser la plus courte, sauf si elle ne respecte pas le principe d'homogénéité
            Utiliser les formulations avec verbe plutôt que celles avec substantif : ces formulations sont généralement plus courtes. Même s'il exite des cas où elles sont plus longues, on les utilisera systématiquement au nom du principe d'homogénité.
                -> exemple          : dire "Utiliser une variable" plutôt que "Utilisation d'une variable" (gain de 5 caratères)
                -> contre-exemple   : "Trier les lignes" plus long que "Tri de lignes" (3 caractères de plus)
            Utiliser les participes-présent plutôt que les subordonnées : 
                "permettant" au lieu de "qui permettent" (gain de 4 caractères)
        - factorisation :
            Eliminer les redondances de mots ou de groupes de mots
            Eliminer les redondances d'informations d'un texte avec son titre (à développer)
            Principe des "code smell". Exemple de "code smell" de répétition de mot
                        La liste :
                            Principes d'homogénéité
                            Principe de séparation
                            Principe de concision
                        peut être remplacée par :
                            Principes
                                Homogéneité
                                Séparation
                                Concision

Powershell
----------
    Information de type :
        file            : correspond à un fichier (FileInfo) ou un répertoire (DirectoryInfo)
        string          : une chaîne de caractères. La nature de l'objet représenté est indiqué entre parenthèses (path par exemple)
        file set        : un ensemble de file passé sur le pipe
        string set      : un ensemble de chaînes de caractères passé sur le pipe
        string list     : une liste de chaînes caractères séparées par des ,
        object          : un objet au sens large

    Compatibilité de type
        un objet de type |file      | peut être utilisé partout ou un |file set   | est attendu
                         |string    |                                 |string set | 
                         |string    |                                 |string list| 
                         |quelconque|                                 |object     |

    Propriétés de file:
        BaseName        : nom du fichier sans son extension        
        Extension       : extension du fichier
        FullName        : nom complet du fichier (avec son path)
        Name            : nom du fichier avec son extension
        PSParentPath    : nom du répertoire parent


    Template des commandes
        objectif de la commande
                type d'entrée 1 > commande 1 > type de sortie 1
                type d'entrée 2 > commande 2 > type de sortie 2
                alias 1, alias 2, alias 3
                option 1 (shortcut 1)
                option 2 (shortcut 2)
                remarque 1
                remarque 2

    IO
        lister tous les éléments (fichiers et répertoires) d'un répertoire donné
            directory path > Get-ChildItem -r "... > file set
            directory path > $dir="...";Get-ChildItem -r $dir > file set
                dir, ls
                -recurse (-r)

        lire le contenu d'un fichier
            string (path) list > Get-Content(...) > string set
            string (path) list > Get-Content(...) > file list

        récupérer un file set à partir d'une liste de path
                            string (path) list > Get-Content(...) > file

        écrire dans un fichier
            object, string (path) > ... | Out-File -filepath "..." > file
                -append : permet de compléter un fichier déjà existant
                -inputObject : permet de préciser un objet à écrire

    Filtrage
        ne conserver que les répertoires d'un file set (et pas les fichiers)
            file set > ... | where {$_.PsIsContainer} > file set

        ne conserver que les fichiers d'un file set (et pas les répertoires)
            file set > ... | where {!$_.PsIsContainer} > file set

        ne conserver que les entrées qui correspondent à une expression régulière
            string set, regular expression > ... | where {$_ -match "..."} > string set

    Boucle
        effectuer un même traitement sur un ensemble de données
            string set + commande powershell > ... | Foreach{...} > string set (si écriture par la commande)
            file set + commande powershell > ... | Foreach{...} > string set (si écriture par la commande)
                Au début du Foreach, créer les variables qui seront utilisées dans la commande
                l'expression $_ désigne l'entrée courante du "string set"
                plusieurs sous-commandes peuvent être séparées par un ;

    Pipeline
        écrire un objet sur le pipeline
            objet > Write-Output(...) > objet

    Information sur les objets
        connaître le type et les membres d'un objet
            objet > ... | Get-Member > MemberDefinition

        lister les noms d'un ensemble de fichiers
            file set > ... | Foreach{$_.FullName} > string set
            file set > ... | Foreach{$_.Name} > string set

    Exemples :
        copie de tous les fichiers contenus dans le répertoire "C:\Temp\PS", avec ajout de BEGIN sur la première ligne et de END sur la dernière lignes
            sans utilisation de pipe au sein du Foreach :
                Get-ChildItem -r "C:\Temp\PS" | where {!$_.PsIsContainer} | Foreach{$input=$_.FullName;$output=$_.PSParentPath+"\"+$_.BaseName+".copie.txt";$output;$content=Get-Content($input);Out-File -filePath "$output" -inputObject "BEGIN";Out-File -append -filePath "$output" -inputObject $content;Out-File -append -filePath "$output" -inputObject "END"}
            avec utilisation de pipe au sein du Foreach :
                Get-ChildItem -r "C:\Temp\PS" | where {!$_.PsIsContainer} | Foreach{$input=$_.FullName;$output=$_.PSParentPath+"\"+$_.BaseName+".copie.txt";$content=Get-Content($input);Write-Output("BEGIN", $content, "END")}
            variante avec utilisation du caractère d'échappement `r signifiant un retour à la ligne :
                Get-ChildItem -r "C:\Temp\PS" | where {!$_.PsIsContainer} | Foreach{$input=$_.FullName;$output=$_.PSParentPath+"\"+$_.BaseName+".copie.txt";$output;$content=Get-Content($input);$outputContent="BEGIN`r"+$content+"`rEND";Out-File -filePath "$output" -inputObject "$outputContent"}

Modification de fichiers
------------------------
    L'objectif de cette section est de donner des méthodes de modification de fichiers. Elle détaille les outils utilisés, ainsi que les commandes au sein de ces outils.

    Carriage return (CR): \r
    Line feed (LF)      : \n
    fin de ligne
        sous UNIX       : \n
        sous Windows    : \r\n
        sous Mac        : \r


    Convertir les fins de ligne d'un fichier (Windows/Unix/Mac)
        Notepad++
            vers UNIX : Edition > Convertir les sauts de ligne > Convertir en Format UNIX (LF)
            vers Windows : Edition > Convertir les sauts de ligne > Convertir en Format Windows (CR+LF)
            vers Mac : Edition > Convertir les sauts de ligne > Convertir en Format Mac (CR)
    Voir les séquences de fin de ligne
        Notepad++
            Affichage > Symboles spéciaux > Afficher les symboles de fin de ligne
    Voir les blancs et les tabulations
        Notepad++
            Affichage > Symboles spéciaux > Afficher les blancs et les tabulations
    Supprimer des lignes vides (i.e ne contenant aucun caractère, pas même des espaces)
        Notepad++ (plugin TextFX)
            TextFX > TextFX Edit > Delete Blank Lines
    Compacter des lignes vides consécutives en une seule ligne vide
        Notepad++ (plugin TextFX)
            TextFX > TextFX Edit > Delete Surplus Blank Lines (mais comportement étrange avec les lignes contenant uniquement des espaces)
    Distribuer sur différentes lignes des items faisant partie d'une liste
        Exemple :            A
                  A, B, C -> B
                             C
        Notepad++
            remplacer (CTRL + H)
            mode étendu (\n, \r, \t, \0, \x...)
            recherche : ,
            remplacer par : \r\n
    Assembler différentes lignes en une liste
        Exemple :   A
                    B -> A, B, C
                    C
        Notepad++
            remplacer (CTRL + H)
            mode étendu (\n, \r, \t, \0, \x...)
            recherche : \r\n
            remplacer par : ,

    Trier des lignes en supprimant les doublons
        Notepad++ (plugin TextFX)
            TextFX > TextFX Tools > cocher "+Sort outputs only UNIQUE (at column) lines"
            TextFX > TextFX Tools > cocher "+Sort ascending" pour un tri par ordre alphabétique / décocher pour un ordre inverse
            TextFX > TextFX Tools > cliquer sur "Sort lines case sensitive (at column)" ou sur "Sort lines case insensitive (at column)"
    Indenter les xml
        IntelliJ
            Code > Reformat Code...
            Raccourci par défaut : CTRL + ALT + L
            Fonctionne sur tous les fichiers du projet ou sur un ensemble de fichiers sélectionnés.
    Convertir "underscore" vers "camelcase"
        Example : iinvCEqSector -> IINV_C_EQ_SECTOR
        Notepad++
            étape 1 : remplacer l'expression régulière ([A-Z]) par _\1 (cocher Respecter la casse)
            étape 2 : passer en majuscule (CTRL + SHIFT + U)
    Comparer 2 listes
        Dans un feuille Excel :
            en A1, saisir le formattage conditionnel : =ET(NON(ESTVIDE(A1)); NB.SI($B$1:$B$10000; A1)=0)
            en B1, saisir le formattage conditionnel : =ET(NON(ESTVIDE(B1)); NB.SI($A$1:$A$10000; B1)=0)
            copier le format de A1 sur la colonne A
            copier le format de B1 sur la colonne B
        Equivalence français / anglais : NB.SI / COUNTIF, ESTVIDE / ISBLANK, NON / NOT, ET / AND
        Inspiré de l'article http://www.techrepublic.com/blog/msoffice/use-conditional-formatting-to-compare-lists-in-excel/4310


    Table ASCII
        Table contenant 128 caractères
        Chaque caractère est codé sur 7 bit, ce qui permet bien la représentation de (2 puissance 7 =) 128 caractères
        Chaque caractère peut être représenté par un chiffre hexadécimal (entre 0 et F) suivi par un chiffre entre 0 et 7, ce qui permet bien la représentation des (16 x 8 =) 128 caractères.
        Voir http://www.asciitable.com/

    Table ASCII étendue
        Table contenant 256 caractères
        Chaque caractère est codé sur 8 bit, ce qui permet bien la représentation de (2 puissance 8 =) 256 caractères
        Chaque caractère peut être représenté par deux chiffres hexadécimal (entre 0 et F), ce qui permet bien la représentation des (16 x 16 =) 256 caractères.
        Ceci n'est pas une mise à jour de la table ASCII
        Il existe plusieurs extensions propriétaires de la table ASCII, incompatibles entre elles.
        Il existe plusieurs tables ASCII étendues définie par l'ISO : ce sont les table ISO 8859.
        La plus populaire des tables ISO 8859 est la table SO 8859-1, appelée également ISO Latin1

    UTF-8
        Système d'encodage des caractères internationaux d'Unicode rétro-compatible avec ASCII
        Chaque caractère est codé sur un ensemble de 1 à 4 octets.
        La rétro-compatibilité avec ASCII signifie que tout caractère ASCII se code en UTF-8 sous forme d'un unique octet, identique au code ASCII.

    Page de code
        Jeu de caractère associant un nombre à chaque caractère d'une langue.
        De nombreuse pages de code ont été définies autour de la norme ASCII, sous-ensemble commun à plusieurs pages de code.

    Unicode
        Standard informatique qui vise à permettre le codage de texte écrit en donnant à tout caractère de n’importe quel système d’écriture un nom et un identifiant numérique, et ce de manière unifiée, quelle que soit la plate-forme informatique ou le logiciel.
        Son but est de remplacer l’utilisation de pages de code nationales.        
        Chaque caractère est associé à un nombre entier appelé point de code.
        L'espace de codage de ces nombres est divisé en 17 zones de 65 536 points de codes. Ces zones sont appelées plans.
        Un point de code est noté U+xxxx où xxxx est un nombre hexadécimal comportant de 4 à 6 chiffres.
        Les points de code du premier plan (appelé plan multilingue de base) comportent 4 chiffres (entre U+0000 et U+FFFF)
        Les points de code des 15 plans suivants comportent 5 chiffres (entre U+10000 et U+FFFFF)
        Les points de code du dernier plans comportent 6 chiffres (entre U+100000 et U+10FFFF).




Subversion
----------
    Différences entre le working directory et la base               : svn diff
    Différences entre le working directory et le serveur            : svn diff -r HEAD
    Résumé des modifications locales                                : svn status
    "Nettoyage" du working directory                                : svn cleanup
    Informations sur le repository (branche, numéro de révision)    : svn info
    Passer un conflit en "résolu"                                   : svn resolved filename


GIT
---
    Fichier de configuration globale Git        : fichier .gitConfig dans le répertoire %USERPROFILE%
                                                  Récupérable en java par : System.getProperty("user.home");
    Branche                                     : Pour Git, une branche est un pointeur sur un commit spécifique. Lors du checkout d'une branche, le HEAD et la branche pointent sur le même commit.
    HEAD                                        : Pointeur vers le parent du prochain commit. Lors du checkout d'une branche, le HEAD et la branche pointent sur le même commit.
    HEAD~                                       : Pointeur vers le parent du commit pointé par HEAD
    HEAD~2                                      : Pointeur vers le parent du commit parent du commit pointé par HEAD (et de même HEAD~3, HEAD~4, etc...)
    HEAD détaché                                : Le HEAD est dit détaché lorsqu'il ne pointe pas sur le dernier commit de la branche courante. Ceci se produit lorsque l'on fait un checkout sur une référence qui n'est pas une branche (comme master~2 par exemple), l'effet étant de créer une branche anonyme.
    Répertoire de travail (working directory)   : Ensemble des fichiers présents sur le disque dur, qui contient aussi bien les fichiers suivis que non suivis. C'est ce répertoire de travail qui contient les versions courantes (c'est-à-dire éventuellement modifiées) des fichiers.
    Index (Staging area)                        : Versions d'un ensemble de fichiers qui feront parti du prochain commit
    Action "Stage"                              : Ajout de fichiers à l'index
    Action "Unstage"                            : Retrait de fichiers de l'index
    Commande "Commit"                           : Création d'un commit fils du commit pointé par le HEAD. Après le commit créé, le HEAD est déplacé vers ce nouveau commit ainsi que la branche si le HEAD n'est pas détaché
    Commande checkout                           : Déplacement du HEAD (éventuellement en le détachant)
    Commande reset                              : Déplacement du HEAD et de la branche courante, avec mise à jour optionnelle de l'index et du working directory
    Commande rebase                             : Déplacement d'une succession de commit (modification de leur parent)
    .                                           : Désigne l'ensemble de tous les fichiers du répertoire courant

    Afficher la configuration globale : git config --global -l
    Afficher la configuration locale à un répertoire git : git config --local -l
                                                           git config --local --list
    Supprimer une variable locale : git config --local --unset nom_de_variable

    Configurer Notepad++ comme editeur (en local) : git config --local core.editor "'C:/Program Files/Notepad++/notepad++.exe' -multiInst -notabbar -nosession -noPlugin"
    Configurer Notepad++ comme editeur (en local) en utilisant un fichier de script : git config --local core.editor C:/GitEditor.bat
        Contenu de GitEditor.bat
            #!/bin/sh
            "c:/Program Files/Notepad++/notepad++.exe" -multiInst -notabbar -nosession -noPlugin "$*"
    Initialiser un répertoire git : git init
    Ajouter un fichier à l'index (faire un stage) : git add nom_de_fichier
    Ajouter récursivement tous les fichiers du répertoire courant à l'index : git add .
    Ajouter à l'index tous les fichiers modifiés déjà suivis (update) : git add -u
    Faire un commit (ajouter les fichiers de l'index au repository) : git commit -m "message de commit
    Afficher le status des fichiers : git status
        Remarque : Cette commande ne montre pas tous les fichiers du répertoire de travail : les fichiers suivis mais non modifiés n'apparaissent pas
    Afficher la liste des fichiers suivis (tracked), c'est-à-dire l'union des fichiers dans le repository et de ceux de l'index : git ls-files
    Afficher la liste des fichiers dans le working dirctory mais non suivis (untracked) : git ls-files --others
        Remarque : A la différence de la commande status, cette commande liste l'ensembles des enfants des répertoire non suivis

    Afficher l'historique des commit : git log
                                       git log --pretty=oneline
                                       git log --pretty=format:"%h %ad | %s%d [%an]" --graph --date=short
                                       git log --pretty=format:\"%h %ad | %s%d [%an]\" --graph --date=short --all
                                       git reflog
        Principaux formats 
        +--------+-------------------------------------------------+
        | Format | Description                                     |
        +--------+-------------------------------------------------+
        |   %H   | Commit hash                                     |
        |   %h   | Abbreviated commit hash                         |
        |   %T   | Tree hash                                       |
        |   %t   | Abbreviated tree hash                           |
        |   %P   | Parent hashes                                   |
        |   %p   | Abbreviated parent hashes                       |
        |   %an  | Author name                                     |
        |   %ae  | Author e-mail                                   |
        |   %ad  | Author date (format respects the –date= option) |
        |   %ar  | Author date, relative                           |
        |   %cn  | Committer name                                  |
        |   %ce  | Committer email                                 |
        |   %cd  | Committer date                                  |
        |   %cr  | Committer date, relative                        |
        |   %s   | Subject                                         |
        +--------+-------------------------------------------------+

    Afficher l'historique des commit (version graphique) : gitk
                                                           gitk --all

    Afficher les différences entre le répertoire de travail et l'index : git diff
    Afficher les différences en utilisant un outil de diff spécifique : git difftool
    Afficher les différences entre l'index et le repository : git diff --cached
    Afficher les différences entre le répertoire de travail et le repository : git diff HEAD
    Afficher les différences entre le HEAD et son parent : git diff HEAD HEAD~
    <!--
    Question : Sometimes git suggests git rm - -cached to unstage a file, sometimes git reset HEAD file. When should I use which?
    Answer : git rm - -cached doesn't unstage a file. It stages the removal of the file. git reset on the other hand, will unstage any staged changes for a given file.
             Edit: Thinking about it, though, if you used git rm - -cached on a new file that is staged, it would basically look like you had just unstaged it since it had never been committed before. Maybe that's what you were seeing?
    Voir http://stackoverflow.com/questions/5798930/whats-the-difference-between-git-rm-cached-asd-and-git-reset-head-asd
    -->

    Déplacer le HEAD sans modifier l'index ni le répertoire de travail : git reset --soft version
        Ainsi, git reset --soft HEADn'a aucun effet puisqu'il deplace HEAD vers HEAD et qu'il ne modifie ni l'index, ni le répertoire de travail
    Déplacer le HEAD en modifiant l'index mais pas le répertoire de travail : git reset version
                                                                              git reset --medium version

    Déplacer le HEAD en modifiant l'index et le répertoire de travail : git reset --hard version
    Déplacer la branche courante (et le HEAD associé)   : git reset v1
                                                          git reset sha1
    Annuler l'opération d'ajout d'un fichier à l'index : git reset HEAD nom_de_fichier
    Récupérer localement la version pointée par le HEAD : git checkout nom_de_fichier
    Créér une branche : git branch myBranch
    Effacer une branche : git branch -d myBranch
    Créér un tag : git tag v1
    Effacer un tag : git tag -d v1
    Stocker les login / mot de passe pour GitHub
        Ajouter les lignes de code suivantes dans le fichier _netrc se trouvant dans le profil utilisateur
            machine github.com
            login COMPTE_GITHUB
            password MOT_DE_PASSE

    Références
        Commande reset                  : http://git-scm.com/2011/07/11/reset.html
        Pro Git                         : http://git-scm.com/book
        Git Community Book en français  : http://alx.github.com/gitbook/index.html
        Tutorial "Immersion"            : http://gitimmersion.com
        Tutorial "Git c'est facile 2"   : http://www.yterium.net/GIT-c-est-facile-2
        Tutorial "Git ready"            : http://gitready.com
        Tutorial "Learn GitHub"         : http://learn.github.com/p/intro.html
        Tutorial "Learn GitHub" (suite) : http://learn.github.com/p/diff.html
        Utiliser Git en entreprise      : http://canop.org/blog/?p=101
        A Visual Git Reference (+++)    : http://marklodato.github.com/visual-git-guide/index-en.html
        Understanding Git Conceptually  : http://www.sbf5.com/~cduan/technical/git/

SQL
---
    sélectionner le maximum d'une colonne en fonction d'une autre colonne
        Exemple : 
            create table max_test(code varchar(3), value int)
            insert into max_test(code, value) values ('A', 3)
            insert into max_test(code, value) values ('A', 4)
            insert into max_test(code, value) values ('A', 5)
            insert into max_test(code, value) values ('B', 1)
            insert into max_test(code, value) values ('B', 4)
            insert into max_test(code, value) values ('C', 7)
            insert into max_test(code, value) values ('C', 6)
            insert into max_test(code, value) values ('C', 5)

        select code, max(value) from max_test group by code


    écrire un case dans un select
        case
            when condition_1 then   value_1
            when condition_2 then   value_2
            ...
            when condition_n then   value_n
            else                    value_else
        end

SYBASE
------
    Vérifier l'existence d'une table : select 1 from sysobjects where type = 'U' and name = 'nom_de_table'
    Vérifier l'existence d'une procédure stockée : select 1 from sysobjects where type = 'P' and name = 'nom_de_procedure'
    Vérifier l'existence d'une table temporaire : select 1 from tempdb..sysobjects where substring(name, 1, len('#INDEX_LIST')) = '#INDEX_LIST' and type = 'U'
    Déclarer une variable : declare @nom_de_la_variable type_de_la_variable
        exemple : declare @ptf_cod varchar(12)
    Affecter une valeur à une variable : select @nom_de_la_variable = @valeur_de_la_variable
        exemple : select @ptf_cod = 'ZX23'
    Voir le code d'une procédure stockée : sp_helptext 'nom_de_procedure'
    Obtenir la liste des utilisateurs : sp_helpuser
    Obtenir la liste des groupes : sp_helpgroup
    Ajouter à une base un groupe défini sur le data serveur : sp_addgroup 'nom_de_groupe'
    Connaître le nom réel d'un base (renvoyé par les messages d'erreurs Sybase) : select @@servername

    Le fichier sql.ini
        Les adaptive server (également appelés data server dans cette page, par opposition aux serveurs physiques) sont définis dans le fichier sql.ini(présent par exemple dans C:\Program Files\sybase\12.5.1\ini).
        Ils sont définis suivant le template :
            [DATA_SERVEUR_NAME]
            query=TCP,server-name,port
        Dans l'exemple, server-name est le nom ou l'alias d'une machine
        Un data serveur peut héberger plusieurs bases
        Si A et B sont 2 bases sur un même data server, et si a est un objet de A et b un objet de B, a peut référencer b en utilisant la syntaxe B..b

    L'outil isql
        Outil Sybase permettant l'exécution d'un script sql via la syntaxe :
            isql -UUSER -PPASSWORD -SDATA_SERVER -DBASE -i C:\Temp\sql\script.sql
            Le fichier d'entrée (ex: script.sql) passé à isql peut inclure un fichier (ex : include.sql) à l'aide de la syntaxe :
                :r C:\Temp\include.sql
            Il ne doit pas y avoir d'espace entre le début de la ligne et le :r

    L'outil bcp
        Outil Sybase permettant de sauvegarder les données d'une table dans un fichier, ou d'alimenter une table à partir des données d'un fichier.
        Sauvegarde des données d'une table
            bcp BASE..TABLE out C:\...\file.csv -U USERNAME -P PASSWORD -S DATASERVER -t ";" -c
        Alimentation d'une table à partir d'un fichier
            bcp BASE..TABLE in C:\...\file.csv -U USERNAME -P PASSWORD -S DATASERVER -t ";" -c


    Système de verrouillage de table : 
        Une table est composée de pages. Une page est composées de lignes (row).
        Les différents systèmes de verrouillage d'une table sont : 
            Allpages locking    : vérouille l'intégralité de la table lors d'une modification de celle-ci (tout select est mis en attente pendant la mise à jour).
                                  c'est le système de verrouillage par défaut d'une table.                
            Datapages locking   : système de verrouillage d'une table dans lequel toutes les pages contenant les lignes en cours de modifications sont verrouillées.
            Datarows locking    : système de verrouillage d'une table dans lequel toutes les lignes en cours de modifications sont verrouillées.        
                                  Il existe un nombre maximal de verrous sur une base Sybase.
                                  Utiliser des verrous de type Datarows permet une granularité plus fine de verrouillage mais accroît les risques d'atteindre la limite maximale du nombre de verrous (du fait de l'attribution d'un verrou à chaque ligne modifiée)

DOS
---
    Lister récursivement les fichiers d'un répertoire : dir /S /A:-D /B
        /S (subdirectories) : permet la récursion sur les sous-répertoires
        /A (attribute)      : -D signifie ne possédant pas l'attribut "Directory"
        /B (bare format)    : présente seulement les noms de fichiers sans formattage (format nu)
    Lister les répertoires              : dir
    Créer un répertoire                 : mkdir nom_de_repertoire
    Changer de répertoire               : cd nom_de_repertoire
    Afficher le contenu d'un fichier    : more nom_de_fichier
    Créer un fichier                    : echo "contenu du fichier" > nom_de_fichier

    Commande externe : Une commande non incluse dans command.com
        Voir http://www.computerhope.com/jargon/e/extecomm.htm

    Less :  programme de mise en page (pager) par défaut utilisé par les fenêtres DOS.
            Less peut utiliser les variables d'environnement LESSCHARSET et LESSCHARDEF.
            FAQ sur Less : http://www.greenwoodsoftware.com/less/faq.html

    LESSCHARSET : Variable d'environnement lue par Less qui permet de préciser le jeux de caractère prédéfini à utiliser.
        Valeurs possibles   : ascii, iso8859, latin1, dos, ebcdic, koi8-r, utf-8
        Exemple             : set LESSCHARSET = latin1

    LESSCHARDEF : Variable d'environnement lue par >Less, permettant de définir un jeux de caractères
        La chaîne de caractère affectée à cette variable défini le type des caractères de 0 à 255.
        Les caractères possibles sont les suivants :
        +-----------+-----------------------+
        | Caractère | Signification         |
        +-----------+-----------------------+
        |      .    | caractère normal      |
        |      c    | caractère de contrôle |
        |      b    | binaire               |
        +-----------+-----------------------+
        Chacun des caractères ci-dessus peut être précédé par un nombre indiquent sur combien de caractères porte le caractère suivant dans la chaîne
        Exemple : le jeu prédéfini ascii correspond à 8bcccbcc18b95.b (caractères : 8 binaires + 3 contrôles + 1 binaire + 2 contrôles + 18 binaires + 95 normaux + 1 binaire soit 128 caractères définis)

Clavier
-------
    Basculer entre anglais et français : ALT + SHIFT

RegExp
------
    IntelliJ
        \t : matche avec les tabulations
        \r : non reconnu
        \n : matche avec la séquence de fin de ligne (\r\n sous Windows et \n sous Unix)
        Remplacement : $1
    Notepad++

        \t : matche avec les tabulations
        \r : non reconnu
        \n : non reconnu
        Remplacement : \1


    Trouver les caractères de mots qui ne sont pas des chiffres : [^\W\d]
        Le symbole indiquant la négation porte sur l'ensemble des caratères qui suivent.
        L'expression signifie donc non(\W ou \d) soit non(\W) et non(\d) c'est-à-dire \w et non(\d).

Anglais
-------

    Les transcriptions phonétiques sont tirées du site suivant : http://www.wordreference.com
    Pour tous les mots dont la phonétique n'apparait pas sur le site précédent, la phonétique est inspirée du site suivant (mais en utilisant les symboles du site précédent, par exemple iː au lieu de i) : http://dictionary.reference.com
    Traduction : http://www.wordreference.com
    Liste des symboles phonétiques : http://www.wordreference.com/fr/French-Pronunciation.aspx
    Prononciation des sons ipa : http://www.antimoon.com/how/pronunc-soundsipa.htm


    +---------------+----------------------------------+-------------------------------------------------------+
    | mot           | phonétique                       | définition                                            |
    +---------------+----------------------------------+-------------------------------------------------------+
    | agile         | ˈædʒaɪl/ˈædʒl                    | agile                                                 |
    | area          | ˈeərɪə                           | région, superficie                                    |
    | ash           |  æʃ                              | cendre                                                |
    | automatically | ˌɔːtəˈmætɪklɪ                    | automatiquement                                       |
    | bat           |  bæt                             | chauve-souris                                         |
    | bet           |  bet                             |                                                       |
    | bot           |  bɒt                             |                                                       |
    | but           |  bʌt                             | mais                                                  |
    | barrage       | ˈbærɑːʒ ; bəˈrɑːʒ                | barrage                                               |
    | browse        |  braʊz                           | naviguer                                              |
    | confluence    | ˈkɒnflʊəns                       |                                                       |
    | comfort       | ˈkʌmfət                          | confort                                               |
    | comfortable   | ˈkʌmftəbl/ˈkʌmfərtbl             | confortable                                           |
    | command       | kəˈmɑːnd/kəˈmænd                 |                                                       |
    | database      | ˈdeɪtəˌbeɪs                      | base de données                                       |
    | directory     | daɪˈrektərɪ/dɪˈrektərɪ/dɪˈrektrɪ | répertoire                                            |
    | eclipse       | ɪˈklɪps                          |                                                       |
    | era           | ˈɪərə                            | époque                                                |
    | error         | ˈerə(r)                          | erreur                                                |
    | extreme       | ɪkˈstriːm                        | extreme                                               |
    | flaccid       | ˈflæsɪd/ˈflæksɪd                 | flasque, mou                                          |
    | France        | frɑːns                           | La France                                             |
    | GUI           | ˈguiː                            | Gui User Interface                                    |
    | Hudson        | ˈhʌdsən                          |                                                       |
    | integer       | ˈɪntɪdʒər                        | mathématiques : entier                                |
    | java          | ˈdʒɑːvə                          |                                                       |
    | ladder        | ˈlædə(r)                         | échelle                                               |
    | library       | ˈlaɪbrərɪ/ˈlaɪbrerɪ              |                                                       |
    | limb          | lɪm                              | membre (bras , jambe) / branche principale d'un arbre |
    | maven         | ˈmeɪvən                          | expert                                                |
    | oath          | əʊθ                              | serment                                               |
    | obstacle      | ˈɒbstəkl                         | obstacle                                              |
    | pawn          | pɔːn                             | pions (aux échecs)                                    |
    | phase         | feɪz                             | phase                                                 |
    | platform      | ˈplætfɔːm                        | plateforme                                            |
    | procedure     | prəˈsiːdʒə(r)                    | procédure                                             |
    | program       | ˈprəʊɡræm/ˈprəʊɡrəm              | programme                                             |
    | raw           | rɔː                              | brut (raw data : données brutes)                      |
    | reassure      | ˌriːəˈʃɔː(r)/riːəˈʃʊər           | rassurer (quelqu'un) (about : sur)                    |
    | release       | rɪˈliːs                          | libérer, livrer                                       |
    | row           | rəʊ                              | ligne                                                 |
    | server        | ˈsɜːvə(r)                        | serveur                                               |
    | source        | sɔːs                             | source                                                |
    | subversion    | səˈbvɜːʃn/səˈbvɜːrʒn             |                                                       |
    | thumb         | θʌm                              | pouce                                                 |
    | toe           | təʊ                              | orteil                                                |
    | tortoise      | ˈtɔːtəs                          | tortue (terrestre)                                    |
    | turtle        | ˈtɜːtl                           | tortue (générique)                                    |
    | variable      | ˈveərɪəbl                        | variable                                              |
    | wound         | wuːnd                            | blessure                                              |
    +---------------+----------------------------------+-------------------------------------------------------+

Français
--------
    Définition : http://www.lexilogos.com/francais_langue_dictionnaires.htm
    +--------------+-------------------------------------------------------------------------------+
    | mot          | définition                                                                    |
    +--------------+-------------------------------------------------------------------------------+
    | atermoiement | (souvent au pluriel) action de différer, retarder; hésitation, tergiversation |
    +----------------------------------------------------------------------------------------------+


Web et Wiki
-----------
    Créer son wiki      : http://fr.mashable.com/2008/07/30/30-solutions-pour-creer-votre-propre-wiki
    Créer son site web  : http://www.2createawebsite.com

XML
---
    Tutoriaux xml
        xml, xslt, dtd, ... : http://www.liafa.univ-paris-diderot.fr/~carton/Enseignement/XML/Cours/index.html

    Testeurs Xslt online
        mark bucayan : http://markbucayan.appspot.com/xslt/index.html
        xslt cake : http://www.xsltcake.com

    Tutoriaux Xslt
        Article sur les node set intermédiaires (utilisé pour l'imbrication de formatages comme élément de liste souligné) : http://xmlfr.org/documentations/faq/041013-0001
        Regroupement xslt : la méthode Muenchian : http://www.jenitennison.com/xslt/grouping/muenchian.html
        Traitement des espaces blancs : décrire la problématique en citant le livre "XSLT Fondamental" de Philippe Drix, aux éditions Eyrolles.

    Tutoriaux XSD
            Tutorial Xsd 1  : http://www.codeproject.com/Articles/18426/XSD-Tutorial-Part-1-of-5-Elements-and-Attributes
            Tutorial Xsd 2  : http://www.w3schools.com/schema/default.asp
            DTD et XSD      : http://gilles-chagnon.developpez.com/cours/xml/dtd-et-schemas

    Validateur XSD online
        Xsd online validator : http://www.corefiling.com/opensource/schemaValidate.html

    <java>
        <item>
            <name>Jvm</name>
            <description>Java virtual machine (machine virtuelle java)</description>
        </item>
        <item>
            <name>Classpath</name>
            <description>Ensemble de chemins utilisés par la jvm pour localiser les différentes ressources (dont les classes). Un classpath peut contenir : des noms de jar; des répertoires (dans ce cas, le répertoire en question doit contenir des .class au sein de sous-répertoires reproduisant l'arborescence des packages).</description>
        </item>
        <item>
            <name>Class literal</name>
            <description>Tout objet qui représente une classe (par exemple String.class</technic>)</description>
        </item>
        <item>
            <name>reifiable type</name>
            <description>Un type "réifiable" est un type dont toute l'information de type est disponible à l'exécution. Un exemple de type non "réifiable" : <technic>List&#60;String&#62;</technic>, car ne sont disponible à l'exécution que les informations de <technic>List</technic>. Les tableaux et l'opérateur instanceof peuvent s'appliquer uniquement à des types réifiables.</description>
        </item>
        <item>
            <name>Paramètre et argument</name>
            <description>Un paramètre est une variable qui fait partie de la déclaration d'une méthode (signature de la méthode). Un argument est une expression utilisée lors de l'appel de la méthode</description>
            <comments>
                <comment>
                    <code>
                        <codeLine level="1">void method(int i, float f)</codeLine>
                        <codeLine level="1">{</codeLine>
                        <codeLine level="3">// Do things</codeLine>
                        <codeLine level="1">}</codeLine>
                        <codeLine level="1"></codeLine>
                        <codeLine level="1">void Bar()</codeLine>
                        <codeLine level="1">{</codeLine>
                        <codeLine level="3">int anInt = 1;</codeLine>
                        <codeLine level="3">method(anInt, 2.0);</codeLine>
                        <codeLine level="1">}</codeLine>
                    </code>
                </comment>
                <comment>Dans cet exemple, <technic>i</technic> et <technic>f</technic> sont des paramètres et <technic>anInt</technic> et <technic>2.0</technic> sont des arguments.</comment>
            </comments>
        </item>
        <item>
            <name>Classes liées aux <technic>JTable</technic></name>
            <description>
                <table>
                    <headerRow>
                        <cell>Objet</cell>
                        <cell>Type</cell>
                        <cell>Description</cell>
                    </headerRow>
                    <row>
                        <cell><technic>JTable</technic></cell>
                        <cell>classe</cell>
                        <cell>vue du modèle de données</cell>
                    </row>
                    <row>
                        <cell><technic>JTable.getModel()</technic></cell>
                        <cell>méthode</cell>
                        <cell>récupération du modèle de données</cell>
                    </row>
                    <row>
                        <cell><technic>JTable.getSelectionModel()</technic></cell>
                        <cell>méthode</cell>
                        <cell>récupération du modèle de sélection</cell>
                    </row>
                    <row>
                        <cell><technic>JTable.getColumnModel()</technic></cell>
                        <cell>méthode</cell>
                        <cell>récupération du modèle de colonnes</cell>
                    </row>
                    <row>
                        <cell><technic>JTable.getTableHeader()</technic></cell>
                        <cell>méthode</cell>
                        <cell>récupération du JTableHeader</cell>
                    </row>
                    <row>
                        <cell><technic>JTable.setDefaultRenderer(...)</technic></cell>
                        <cell>méthode</cell>
                        <cell>modification du renderer par défaut d'une classe donnée</cell>
                    </row>
                    <row>
                        <cell><technic>JTable.getCellRenderer(int row, int column)</technic></cell>
                        <cell>method</cell>
                        <cell>Sélection du renderer de la table : renvoie en priorité le renderer particulier de la colonne; sinon, utilise un renderer par défaut approprié à la classe renvoyée par TableModel.getColumnClass()</cell>
                    </row>
                    <row>
                        <cell><technic>TableColumnModel</technic></cell>
                        <cell>interface</cell>
                        <cell>modèle des colonnes de la table. L'ordre des colonnes dans ce modèle (column index) peut être modifié par la JTable afin de refléter l'ordre d'affichage des colonnes.</cell>
                    </row>
                    <row>
                        <cell><technic>TableColumn</technic></cell>
                        <cell>classe</cell>
                        <cell>modèle d'une colonne de la table</cell>
                    </row>
                    <row>
                        <cell><technic>TableColumn.setCellRenderer()</technic></cell>
                        <cell>method</cell>
                        <cell>modification du renderer d'une colonne</cell>
                    </row>
                    <row>
                        <cell><technic>TableModel</technic></cell>
                        <cell>interface</cell>
                        <cell>modèle de données de la table</cell>
                    </row>
                    <row>
                        <cell><technic>TableModelEvent</technic></cell>
                        <cell>classe</cell>
                        <cell>évenement de modification du modèle de données</cell>
                    </row>
                    <row>
                        <cell><technic>TableModelListener</technic></cell>
                        <cell>interface</cell>
                        <cell>callback de traitement des modifications d'un TableModel; gère des TableModelEvent via la méthode tableChanged()</cell>
                    </row>
                    <row>
                        <cell><technic>DefaultTableModel</technic></cell>
                        <cell>classe</cell>
                        <cell>modèle de table par défaut; représente uniquement des chaînes de caractères et ne permets pas la représentation d'autre types (booléen, par exemple)</cell>
                    </row>
                    <row>
                        <cell><technic>AbstractTableModel</technic></cell>
                        <cell>classe</cell>
                        <cell>classe de base de modèle qui implémente des méthodes de notification de modification (méthodes fireTableRowsUpdated(), fireTableRowsInserted(), ... appellant la méthode TableModelListener.tableChanged avec des TableModelEvent appropriés)</cell>
                    </row>
                    <row>
                        <cell><technic>ListSelectionModel</technic></cell>
                        <cell>interface</cell>
                        <cell>modèle de sélection de la table (par ligne , par colonne, par cellule)</cell>
                    </row>
                    <row>
                        <cell><technic>JTableHeader</technic></cell>
                        <cell>classe</cell>
                        <cell>headers de la table</cell>
                    </row>
                    <row>
                        <cell><technic>TableColumnModelListener</technic></cell>
                        <cell>interface</cell>
                        <cell>callback de traitement des modifications du modèle do colonnes</cell>
                    </row>
                    <row>
                        <cell><technic>TableColumnModelEvent</technic></cell>
                        <cell>classe</cell>
                        <cell>évenement de modification du modèle de colonnes</cell>
                    </row>
                    <row>
                        <cell><technic>TableCellRenderer</technic></cell>
                        <cell>class</cell>
                        <cell>Renderer de la table,dont le rôle est de retourner un composant de rendu</cell>
                    </row>
                    <row>
                        <cell><technic>TableCellRenderer.getTableCellRendererComponent()</technic></cell>
                        <cell>method</cell>
                        <cell>Sélection du composant effectuant le rendu</cell>
                    </row>
                    <row>
                        <cell><technic>DefaultTableCellRenderer</technic></cell>
                        <cell>class</cell>
                        <cell>Renderer par défaut, le composant assurant le rendu des cellules étant un JLabel</cell>
                    </row>
                    <row>
                        <cell><technic>DefaultRowSorter</technic></cell>
                        <cell>abstract class</cell>
                        <cell>classe de base de TableRowSorter</cell>
                    </row>
                    <row>
                        <cell><technic>TableRowSorter</technic></cell>
                        <cell>class</cell>
                        <cell>une implémentation de <technic>RowSorter</technic> qui fournit un tri et un filtre en utilisant un <technic>TableModel</technic></cell>
                    </row>
                    <row>
                        <cell><technic>RowSorter</technic></cell>
                        <cell>abstract class</cell>
                        <cell>base de tri et filtrage</cell>
                    </row>
                    <row>
                        <cell><technic>RowSorter.SortKey</technic></cell>
                        <cell>inner class</cell>
                        <cell>Décrit l'ordre de tri pour une colonne</cell>
                    </row>
                    <row>
                        <cell><technic>RowSorter.setSortKeys(...)</technic></cell>
                        <cell>method</cell>
                        <cell>Précise les SortKeys du <technic>RowSorter</technic></cell>
                    </row>
                    <row>
                        <cell><technic>RowFilter</technic></cell>
                        <cell>abstract class</cell>
                        <cell>Filtrage des données du modèle pour affichage dans la vue</cell>
                    </row>
                    <row>
                        <cell><technic>RowFilter.regexFilter(...)</technic></cell>
                        <cell>method</cell>
                        <cell>créée une instance de RegexFilter</cell>
                    </row>
                    <row>
                        <cell><technic>RowFilter.dateFilter(...)</technic></cell>
                        <cell>method</cell>
                        <cell>créée une instance de DateFilter</cell>
                    </row>
                    <row>
                        <cell><technic>RowFilter.numberFilter(...)</technic></cell>
                        <cell>method</cell>
                        <cell>créée une instance de NumberFilter</cell>
                    </row>
                    <row>
                        <cell><technic>RowFilter.orFilter(...)</technic></cell>
                        <cell>method</cell>
                        <cell>créée une instance de OrFilter</cell>
                    </row>
                    <row>
                        <cell><technic>RowFilter.andFilter(...)</technic></cell>
                        <cell>method</cell>
                        <cell>créée une instance de AndFilter</cell>
                    </row>
                    <row>
                        <cell><technic>RowFilter.notFilter()</technic></cell>
                        <cell>method</cell>
                        <cell>créée une instance de NotFilter</cell>
                    </row>
                    <row>
                        <cell><technic>DefaultCellEditor</technic></cell>
                        <cell>class</cell>
                        <cell>éditeur par défaut des tables et des arbres</cell>
                    </row>
                    <row>
                        <cell><technic>CellEditor.getCellEditorValue()</technic></cell>
                        <cell>method</cell>
                        <cell>doit renvoyer la valeur de l'éditeur</cell>
                    </row>
                    <row>
                        <cell><technic>TableCellEditor.getTableCellEditorComponent()</technic></cell>
                        <cell>method</cell>
                        <cell>doit renvoyer le composant d'édition</cell>
                    </row>
                </table>
            </description>
            <comments>
                <comment>Définitions de (et différence entre) column index et model index :<newLine/>Lors de l'assignation du TableModel à une JTable, pour chaque index i entre 0 et TableModel.getColumnCount(), un TableColumn est créé avec le nom TableModel.getColumnName(i) et avec un model index égal à i. De plus, ces TableColumn sont stockés dans le TableColumnModel.<newLine/>On appelle column index l'index de stockage d'un TableColumn au sein du TableColumnModel.<newLine/>Le model index d'une TableColumn ne varient jamais. Par contre, le column index peut varier lors d'un déplacement de colonne.<newLine/>L'ordre de stockage des TableColumn dans le TableColumnModel (column index) représente l'ordre d'affichage des colonnes par la JTable.</comment>
                <comment>le tri de chaînes de caractères dépend de la locale</comment>
            </comments>
        </item>
        <item>
            <name>Classes liées aux <technic>JTree</technic></name>
            <description>
                <row>
                    <cell><technic>JTree.convertValueToText(...)</technic></cell>
                    <cell>method</cell>
                    <cell>Convertie le user object en texte à afficher (par défaut, le texte affiché est celui retourné par la méthode <technic>toString()</technic>)</cell>
                </row>
                <row>
                    <cell><technic>JTree.addTreeSelectionListener(...)</technic></cell>
                    <cell>method</cell>
                    <cell>ajout d'un listener sur les événements de sélection dans l'arbre</cell>
                </row>
                <row>
                    <cell><technic>DefaultMutableTreeNode.add(...)</technic></cell>
                    <cell>method</cell>
                    <cell>ajoute un MutableTreeNode comme enfant du noeud</cell>
                </row>
                <row>
                    <cell><technic>DefaultMutableTreeNode.getUserObject(...)</technic></cell>
                    <cell>method</cell>
                    <cell>renvoi l'Object passé au noeud lors de la construction ou via la méthode setUserObject()</cell>
                </row>
                <row>
                    <cell><technic>TreeSelectionListener</technic></cell>
                    <cell></cell>
                    <cell>getLastSelectedPathComponent (revoie un Object)</cell>
                </row>
                <row>
                    <cell><technic>DefaultTreeCellRenderer.setLeafIcon(...)</technic></cell>
                    <cell>method</cell>
                    <cell>définition de l'icône pour les noeuds feuilles</cell>
                </row>
                <row>
                    <cell><technic>DefaultTreeCellRenderer.setOpenIcon(...)</technic></cell>
                    <cell>method</cell>
                    <cell>définition de l'icône pour les noeuds non feuilles ouverts</cell>
                </row>
                <row>
                    <cell><technic>DefaultTreeCellRenderer.setClosedIcon(...)</technic></cell>
                    <cell>method</cell>
                    <cell>définition de l'icône pour les noeuds non feuilles fermés</cell>
                </row>
                <row>
                    <cell><technic>TreeCellRenderer.getTreeCellRendererComponent(...)</technic></cell>
                    <cell>method</cell>
                    <cell>sélection du composant effectuant le rendu</cell>
                </row>
                <row>
                    <cell><technic>DefaultTreeModel.insertNodeInto(...)</technic></cell>
                    <cell>method</cell>
                    <cell>ajout d'un noeud dans le modèle</cell>
                </row>
            </description>
        </item>
        <item>
            <name>Classes liées aux <technic>JTreeTable</technic></name>
            <description>
                <row>
                    <cell><technic>JTreeTable</technic></cell>
                    <cell>class</cell>
                    <cell>une JTable dont le renderer est un JTree</cell>
                </row>
                <row>
                    <cell><technic>TreeTableCellRenderer</technic></cell>
                    <cell>class</cell>
                    <cell>Renderer du <technic>JTreeTable</technic></cell>
                </row>
                <row>
                    <cell><technic>TreeTableModel</technic></cell>
                    <cell>interface</cell>
                    <cell>Modèle du <technic>JTreeTable</technic></cell>
                </row>
                <row>
                    <cell><technic>TreeTableModelAdapter</technic></cell>
                    <cell>class</cell>
                    <cell>un AbstractTableModel faisant le lien avec le TreeTableModel</cell>
                </row>
                <row>
                    <cell><technic>JTreeTable.TreeCellRendererAdapter</technic></cell>
                    <cell>inner class</cell>
                    <cell></cell>
                </row>
                <row>
                    <cell><technic>AbstractCellEditor.fireEditingStopped()</technic></cell>
                    <cell>method</cell>
                    <cell>à appeler à la fin de l'édition pour que le renderer soit de nouveau affiché</cell>
                </row>
            </description>
        </item>
        <item>
            <name>Gestion des évènements par la classe Component</name>
            <description>
                <headerRow>
                    <cell>Listener</cell>
                    <cell>Event traité</cell>
                    <cell>méthode d'ajout du Listener dans Component</cell>
                    <cell>méthodes du listener</cell>
                </headerRow>
                <row>
                    <cell>ComponentListener</cell>
                    <cell>ComponentEvent</cell>
                    <cell>addComponentListener</cell>
                    <cell></cell>
                </row>
                <row>
                    <cell></cell>
                    <cell></cell>
                    <cell></cell>
                    <cell>componentResized</cell>
                </row>
                <row>
                    <cell></cell>
                    <cell></cell>
                    <cell></cell>
                    <cell>componentMoved</cell>
                </row>
                <row>
                    <cell></cell>
                    <cell></cell>
                    <cell></cell>
                    <cell>componentShown</cell>
                </row>
                <row>
                    <cell></cell>
                    <cell></cell>
                    <cell></cell>
                    <cell>componentHidden</cell>
                </row>
                <row>
                    <cell>FocusListener</cell>
                    <cell>FocusEvent</cell>
                    <cell>addFocusListener</cell>
                    <cell></cell>
                </row>
                <row>
                    <cell></cell>
                    <cell></cell>
                    <cell></cell>
                    <cell>focusGained</cell>
                </row>
                <row>
                    <cell></cell>
                    <cell></cell>
                    <cell></cell>
                    <cell>focusLost</cell>
                </row>
                <row>
                    <cell>HierarchyBoundsListener</cell>
                    <cell>HierarchyEvent</cell>
                    <cell>addHierarchyBoundsListener</cell>
                    <cell></cell>
                </row>
                <row>
                    <cell></cell>
                    <cell></cell>
                    <cell></cell>
                    <cell>ancestorMoved</cell>
                </row>
                <row>
                    <cell></cell>
                    <cell></cell>
                    <cell></cell>
                    <cell>ancestorResized</cell>
                </row>
                <row>
                    <cell>HierarchyListener</cell>
                    <cell>HierarchyEvent</cell>
                    <cell>addHierarchyListener</cell>
                    <cell></cell>
                </row>
                <row>
                    <cell></cell>
                    <cell></cell>
                    <cell></cell>
                    <cell>hierarchyChanged</cell>
                </row>
                <row>
                    <cell>InputMethodListener</cell>
                    <cell>InputMethodEvent</cell>
                    <cell>addInputMethodListener</cell>
                    <cell></cell>
                </row>
                <row>
                    <cell></cell>
                    <cell></cell>
                    <cell></cell>
                    <cell>inputMethodTextChanged</cell>
                </row>
                <row>
                    <cell></cell>
                    <cell></cell>
                    <cell></cell>
                    <cell>caretPositionChanged</cell>
                </row>
                <row>
                    <cell>KeyListener</cell>
                    <cell>KeyEvent</cell>
                    <cell>addKeyListener</cell>
                    <cell></cell>
                </row>
                <row>
                    <cell></cell>
                    <cell></cell>
                    <cell></cell>
                    <cell>keyTyped</cell>
                </row>
                <row>
                    <cell></cell>
                    <cell></cell>
                    <cell></cell>
                    <cell>keyPressed</cell>
                </row>
                <row>
                    <cell></cell>
                    <cell></cell>
                    <cell></cell>
                    <cell>keyReleased</cell>
                </row>
                <row>
                    <cell>MouseListener</cell>
                    <cell>MouseEvent</cell>
                    <cell>addMouseListener</cell>
                    <cell></cell>
                </row>
                <row>
                    <cell></cell>
                    <cell></cell>
                    <cell></cell>
                    <cell>mouseClicked</cell>
                </row>
                <row>
                    <cell></cell>
                    <cell></cell>
                    <cell></cell>
                    <cell>mousePressed</cell>
                </row>
                <row>
                    <cell></cell>
                    <cell></cell>
                    <cell></cell>
                    <cell>mouseReleased</cell>
                </row>
                <row>
                    <cell></cell>
                    <cell></cell>
                    <cell></cell>
                    <cell>mouseEntered</cell>
                </row>
                <row>
                    <cell></cell>
                    <cell></cell>
                    <cell></cell>
                    <cell>mouseExited</cell>
                </row>
                <row>
                    <cell>MouseMotionListener</cell>
                    <cell>MouseEvent</cell>
                    <cell>addMouseMotionListener</cell>
                    <cell></cell>
                </row>
                <row>
                    <cell></cell>
                    <cell></cell>
                    <cell></cell>
                    <cell>mouseDragged</cell>
                </row>
                <row>
                    <cell></cell>
                    <cell></cell>
                    <cell></cell>
                    <cell>mouseMoved</cell>
                </row>
                <row>
                    <cell>MouseWheelListener</cell>
                    <cell>MouseWheelEvent</cell>
                    <cell>addMouseWheelListener</cell>
                    <cell></cell>
                </row>
                <row>
                    <cell></cell>
                    <cell></cell>
                    <cell></cell>
                    <cell>mouseWheelMoved</cell>
                </row>
                <row>
                    <cell>PropertyChangeListener</cell>
                    <cell>PropertyChangeEvent</cell>
                    <cell>addPropertyChangeListener</cell>
                    <cell></cell>
                </row>
                <row>
                    <cell></cell>
                    <cell></cell>
                    <cell></cell>
                    <cell>propertyChange</cell>
                </row>
            </description>
        </item>
        <method>
            <goal>Effectuer un traitement à la fermeture d'un JInternalFrame</goal>
            <solutions>
                <solution>
                    <description>Passer une instance de <technic>javax.swing.event.InternalFrameAdapter</technic> à la méthode <technic>JInternalFrame.addInternalFrameListener(...)</technic></description>
                </solution>
            </solutions>
        </method>
        <method>
            <goal>Lire les lignes d'un fichier</goal>
            <solutions>
                <solution>
                    <tested>jdk6</tested>
                    <package>
                        <name>java.lang</name>
                        <class>String</class>
                    </package>
                    <package>
                        <name>java.util</name>
                        <class>List</class>
                        <class>ArrayList</class>
                    </package>
                    <code lang="java">
                        <codeLine level="1">public static List&#60;String&#62; readLines(File file) throws IOException {</codeLine>
                        <codeLine level="2">BufferedReader reader = new BufferedReader(new FileReader(file));</codeLine>
                        <codeLine level="2">List&#60;String&#62; lines = new ArrayList&#60;String&#62;();</codeLine>
                        <codeLine level="2">String line = reader.readLine();</codeLine>
                        <codeLine level="2">while (line != null) {</codeLine>
                        <codeLine level="3">lines.add(line);</codeLine>
                        <codeLine level="3">line = reader.readLine();</codeLine>
                        <codeLine level="2">}</codeLine>
                        <codeLine level="2">reader.close();</codeLine>
                        <codeLine level="2">return lines;</codeLine>
                        <codeLine level="1">}</codeLine>
                    </code>
                </solution>
            </solutions>
            <comments>
                <comment>Pour deux fichiers contenant respectivement <technic>A\r\nB</technic> et <technic>A\r\nB\r\n</technic>, la méthode <technic>readLines</technic> renvoie une liste identique (contenant les 2 éléments <technic>A</technic> et <technic>B</technic>).</comment>
            </comments>
        </method>
        <method>
            <goal>Insérer des lignes dans un fichier</goal>
            <solutions>
                <solution>
                    <tested>jdk6</tested>
                    <package>
                        <name>java.lang</name>
                        <class>String</class>
                    </package>
                    <package>
                        <name>java.util</name>
                        <class>List</class>
                    </package>
                    <package>
                        <name>java.io</name>
                        <class>FileWriter</class>
                        <class>BufferedWriter</class>
                    </package>
                    <code lang="java">
                        <codeLine level="1">public static void writeLines(List&#60;String&#62; lines, File file) throws IOException {</codeLine>
                        <codeLine level="2">BufferedWriter writer = new BufferedWriter(new FileWriter(file));</codeLine>
                        <codeLine level="2">for (int i = 0; i &#60; lines.size() - 1; i++) {</codeLine>
                        <codeLine level="3">writer.write(lines.get(i));</codeLine>
                        <codeLine level="3">writer.newLine();</codeLine>
                        <codeLine level="2">}</codeLine>
                        <codeLine level="2">writer.write(lines.get(lines.size() - 1));</codeLine>
                        <codeLine level="2">writer.flush();</codeLine>
                        <codeLine level="2">writer.close();</codeLine>
                        <codeLine level="1">}</codeLine>
                    </code>
                </solution>
            </solutions>
            <comments>
                <comment>la méthode <technic>writeLines</technic> n'ajoute pas de séquence de fin de ligne après la dernière ligne</comment>
            </comments>
        </method>
        <method>
            <goal>Manipuler les listes</goal>
            <solutions>
                <solution>
                    <tested>jdk6</tested>
                    <package>
                        <name>java.lang</name>
                        <class>String</class>
                    </package>
                    <package>
                        <name>java.util</name>
                        <class>List</class>
                        <class>ArrayList</class>
                        <class>Arrays</class>
                    </package>
                    <code lang="java">
                        <codeLine level="1">SimpleDateFormat sdf = new SimpleDateFormat("dd/MM/yyyy");</codeLine>
                        <codeLine level="1">Date date = sdf.parse("10/11/2011");</codeLine>
                    </code>
                </solution>
            </solutions>
        </method>
        <method>
            <goal>Récupérer les propriétés systèmes</goal>
            <solutions>
                <solution>
                    <package>
                        <name>java.lang</name>
                        <class>System</class>
                    </package>
                    <code lang="java">
                        <codeLine level="1">System.getProperties()</codeLine>
                    </code>
                </solution>
            </solutions>
        </method>
        <method>
            <goal>Récupérer une liste fixe de chaînes de caractères</goal>
            <solutions>
                <solution>
                    <package>
                        <name>java.lang</name>
                        <class>String</class>
                    </package>
                    <package>
                        <name>java.util</name>
                        <class>List</class>
                        <class>ArrayList</class>
                    </package>
                    <code lang="java">
                        <codeLine level="1">public List&#60;String&#62; getAllFilePath() {</codeLine>
                        <codeLine level="2">String[] pathArray = {</codeLine>
                        <codeLine level="3">"C:\\dev\\file1.xml",</codeLine>
                        <codeLine level="3">"C:\\dev\\file2.txt"</codeLine>
                        <codeLine level="2">};</codeLine>
                        <codeLine level="2">List&#60;String&#62; stringList = new ArrayList&#60;String&#62;();</codeLine>
                        <codeLine level="2">stringList.addAll(Arrays.asList(pathArray));</codeLine>
                        <codeLine level="2">return stringList;</codeLine>
                        <codeLine level="1">}</codeLine>
                    </code>
                </solution>
            </solutions>
        </method>
        <method>
            <goal>Modifier plusieurs fichiers</goal>
            <solutions>
                <solution>
                    <code lang="java">
                        <codeLine level="1">public void process() throws Exception {</codeLine>
                        <codeLine level="2">for (String filePath : getAllFilePath()) {</codeLine>
                        <codeLine level="3">File file = new File(filePath);</codeLine>
                        <codeLine level="3">List&#60;String&#62; lines = readLines(file);</codeLine>
                        <codeLine level="3">List&#60;String&#62; processedLines = process(lines);</codeLine>
                        <codeLine level="3">writeLines(processedLines, file);</codeLine>
                        <codeLine level="2">}</codeLine>
                        <codeLine level="1">}</codeLine>
                    </code>
                </solution>
             </solutions>
            <comments>
                <comment><technic>getAllFilePath</technic>, <technic>readLines</technic>, <technic>writeLines</technic> sont 3 méthodes définies dans cette section</comment>
                <comment>La méthode <technic>process</technic> est la seule qui reste à définir</comment>
                <comment>D'après les remarques sur les méthodes <technic>readLines</technic> et <technic>writeLines</technic>, la lecture puis la réécriture d'un fichier se terminant par une séquence de fin de ligne aura pour conséquence la suppression de cette séquence</comment>
            </comments>
        </method>
        <method>
            <goal>Utiliser les expressions régulières</goal>
            <solutions>
                <solution>
                    <tested>jdk6</tested>
                    <package>
                        <name>java.util.regex</name>
                        <class>Pattern</class>
                        <class>Matcher</class>
                    </package>
                    <code lang="java">
                        <codeLine level="1">public static void main(String[] args) {</codeLine>
                        <codeLine level="2">Pattern pattern = Pattern.compile("(\\w)(..)(.)");</codeLine>
                        <codeLine level="2">Matcher matcher = pattern.matcher("abcd efghijklmn");</codeLine>
                        <codeLine level="2">while (matcher.find()) {</codeLine>
                        <codeLine level="3">System.out.println("MATCH !");</codeLine>
                        <codeLine level="3">System.out.println("group()= " + matcher.group());</codeLine>
                        <codeLine level="3">System.out.println("offset before first matched character = " + matcher.start());</codeLine>
                        <codeLine level="3">System.out.println("offset after last matched character= " + matcher.end());</codeLine>
                        <codeLine level="3">System.out.println("groupCount = " + matcher.groupCount());</codeLine>
                        <codeLine level="3">for (int i = 0; i &#60; matcher.groupCount() + 1; i++) {</codeLine>
                        <codeLine level="4">System.out.println("\tgroup(" + i + ") = " + matcher.group(i));</codeLine>
                        <codeLine level="4">System.out.println("\t\toffset before group(" + i + ") first character= " + matcher.start(i));</codeLine>
                        <codeLine level="4">System.out.println("\t\toffset after group(" + i + ") last character = " + matcher.end(i));</codeLine>
                        <codeLine level="3">}</codeLine>
                        <codeLine level="2">}</codeLine>
                        <codeLine level="2">System.out.println("modifiedString = " + matcher.replaceAll("X"));</codeLine>
                        <codeLine level="1">}</codeLine>
                    </code>
                </solution>
            </solutions>
            <comments>
                <comment>L'éxécution du code précédent affiche la sortie suivante :<newLine/>
                    <code>
                        <codeLine level="1">MATCH !</codeLine>
                        <codeLine level="1">group()= abcd</codeLine>
                        <codeLine level="1">offset before first matched character = 0</codeLine>
                        <codeLine level="1">offset after last matched character= 4</codeLine>
                        <codeLine level="1">groupCount = 3</codeLine>
                        <codeLine level="1">group(0) = abcd</codeLine>
                        <codeLine level="1">offset before group(0) first character= 0</codeLine>
                        <codeLine level="1">offset after group(0) last character = 4</codeLine>
                        <codeLine level="1">group(1) = a</codeLine>
                        <codeLine level="1">offset before group(1) first character= 0</codeLine>
                        <codeLine level="1">offset after group(1) last character = 1</codeLine>
                        <codeLine level="1">group(2) = bc</codeLine>
                        <codeLine level="1">offset before group(2) first character= 1</codeLine>
                        <codeLine level="1">offset after group(2) last character = 3</codeLine>
                        <codeLine level="1">group(3) = d</codeLine>
                        <codeLine level="1">offset before group(3) first character= 3</codeLine>
                        <codeLine level="1">offset after group(3) last character = 4</codeLine>
                        <codeLine level="1">MATCH !</codeLine>
                        <codeLine level="1">group()= efgh</codeLine>
                        <codeLine level="1">offset before first matched character = 5</codeLine>
                        <codeLine level="1">offset after last matched character= 9</codeLine>
                        <codeLine level="1">groupCount = 3</codeLine>
                        <codeLine level="1">group(0) = efgh</codeLine>
                        <codeLine level="1">offset before group(0) first character= 5</codeLine>
                        <codeLine level="1">offset after group(0) last character = 9</codeLine>
                        <codeLine level="1">group(1) = e</codeLine>
                        <codeLine level="1">offset before group(1) first character= 5</codeLine>
                        <codeLine level="1">offset after group(1) last character = 6</codeLine>
                        <codeLine level="1">group(2) = fg</codeLine>
                        <codeLine level="1">offset before group(2) first character= 6</codeLine>
                        <codeLine level="1">offset after group(2) last character = 8</codeLine>
                        <codeLine level="1">group(3) = h</codeLine>
                        <codeLine level="1">offset before group(3) first character= 8</codeLine>
                        <codeLine level="1">offset after group(3) last character = 9</codeLine>
                        <codeLine level="1">MATCH !</codeLine>
                        <codeLine level="1">group()= ijkl</codeLine>
                        <codeLine level="1">offset before first matched character = 9</codeLine>
                        <codeLine level="1">offset after last matched character= 13</codeLine>
                        <codeLine level="1">groupCount = 3</codeLine>
                        <codeLine level="1">group(0) = ijkl</codeLine>
                        <codeLine level="1">offset before group(0) first character= 9</codeLine>
                        <codeLine level="1">offset after group(0) last character = 13</codeLine>
                        <codeLine level="1">group(1) = i</codeLine>
                        <codeLine level="1">offset before group(1) first character= 9</codeLine>
                        <codeLine level="1">offset after group(1) last character = 10</codeLine>
                        <codeLine level="1">group(2) = jk</codeLine>
                        <codeLine level="1">offset before group(2) first character= 10</codeLine>
                        <codeLine level="1">offset after group(2) last character = 12</codeLine>
                        <codeLine level="1">group(3) = l</codeLine>
                        <codeLine level="1">offset before group(3) first character= 12</codeLine>
                        <codeLine level="1">offset after group(3) last character = 13</codeLine>
                        <codeLine level="1">modifiedString = X XXmn</codeLine>
                    </code>
                </comment>
            </comments>
        </method>
        <method>
            <goal>Décompiler des classes java</goal>
            <solutions>
                <solution>
                    <step>utiliser l'outil <reference><name><technic>JD-GUI</technic></name><link>http://java.decompiler.free.fr/?q=jdgui</link></reference></step>
                </solution>
            </solutions>
        </method>
        <references>
            <reference>
                <name>Liste des librairies tiers java</name>
                <link>http://www.jdocs.com/page/AllLibraries</link>
            </reference>
            <reference>
                <name>Librairies Apache Common (Liste et documentation)</name>
                <link>http://commons.apache.org/</link>
            </reference>
            <reference>
                <name>Librairies Apache Common (Liste plus complète avec des références vers les sites des projets - voir "Project Website")</name>
                <link>http://projects.apache.org/indexes/alpha.html</link>
            </reference>
            <reference>
                <name>Librairie Apache Common Bean Utils. Une lib équivalente à BeanUtils : Beanlib</name>
                <link>http://commons.apache.org/beanutils/commons-beanutils-1.7.0/docs/api/org/apache/commons/beanutils/package-summary.html</link>
            </reference>
            <reference>
                <name>Liste des projets CodeHaus</name>
                <link>http://xircles.codehaus.org/projects</link>
            </reference>
            <reference>
                <name>Liste des projets dans la catégorie développement de SourceForge (voir les sous-catégories dans la partie gauche de la page + possibilité de filtrer les entrées)</name>
                <link>http://sourceforge.net/directory/development/development/</link>
            </reference>
            <reference>
                <name>Tutorial IO</name>
                <link>http://tutorials.jenkov.com/java-io/index.html</link>
            </reference>
            <reference>
                <name>Tutorial JXTreeTable</name>
                <link>http://www.informit.com/guides/content.aspx?g=java&#38;seqNum=528</link>
            </reference>
            <reference>
                <name>Exemples d'utilisation de JTable</name>
                <link>http://www.java2s.com/Code/Java/Swing-Components/Grid-Table.htm</link>
            </reference>
            <reference>
                <name>Example TreeTable SwingX</name>
                <link>http://www.ibm.com/developerworks/java/library/j-5things14/index.html</link>
            </reference>
            <reference>
                <name>Composants swing</name>
                <link>http://docs.oracle.com/javase/tutorial/uiswing/components/index.html</link>
            </reference>
            <reference>
                <name>Génériques</name>
                <link>http://docs.oracle.com/javase/tutorial/java/generics/index.html</link>
            </reference>
            <reference>
                <name>Génériques (2)</name>
                <link>http://www.angelikalanger.com/GenericsFAQ/JavaGenericsFAQ.html</link>
            </reference>
            <reference>
                <name>Librairie SWT</name>
                <link>http://www.eclipse.org/swt/</link>
            </reference>
            <reference>
                <name>Librairie JUnit-Ext</name>
                <link>http://code.google.com/p/junit-ext/</link>
            </reference>
            <reference>
                <name>Code du JTreeTable</name>
                <link>http://www.java2s.com/Code/Java/Swing-Components/JTreeTablecomponent.htm</link>
            </reference>
            <reference>
                <name>Description de la JTreeTable</name>
                <link>http://bitguru.wordpress.com/2008/06/18/jtreetable/</link>
            </reference>
            <reference>
                <name>Schema UML des classes liées au JTreeTable</name>
                <link>http://www.hameister.org/JavaSwingTreeTable.html</link>
            </reference>
            <reference>
                <name>Synchronous versus asynchronous</name>
                <link>http://openjavafaq.blogspot.fr/2009/07/synchronous-vs-asynchronous.html#!/2009/07/synchronous-vs-asynchronous.html</link>
            </reference>
            <reference>
                <name>Class Loader</name>
                <link>http://www.ibm.com/developerworks/java/tutorials/j-classloader/index.html</link>
            </reference>
            <reference>
                <name>O'Reilly's CD bookshelfs</name>
                <link>http://docstore.mik.ua/orelly/index.html</link>
            </reference>
        </references>
    </java>

Unix
----
    shebang / sha-bang / hashbang / pound-bang / hash-exclam / hash-pling : 
        Ligne en début de fichier débutant par #!, indiquant au système que le fichier est un script et par quel est son interpréteur associé.

        +-------------------+------------------------------------------+
        | shebang           | language de script                       |
        +-------------------+------------------------------------------+
        | #!/bin/sh         | Bourne shell (ou autre shell compatible) |
        | #!/bin/csh        | C shell (ou autre shell compatible)      |
        | #!/usr/bin/perl   | Perl                                     |
        | #!/usr/bin/php    | PHP                                      |
        | #!/usr/bin/python | Python                                   |
        | #!/usr/bin/ruby   | Ruby                                     |
        +-------------------+------------------------------------------+

Hudson
-------

    master (maître)                 : Serveur Hudson, hébergeant entre autres l'interface Web d'Hudson
    slave (esclave)                 : Machine sur laquelle se font les build. Les sources sont extraites sur les machines esclaves; les goals maven sont exécutés sur les machines esclaves
    node (noeud)                    : Machine maître ou esclave
    Workspace (espace de travail)   : Répertoire (sur les esclaves) où les sources sont extraites.
                                      Pour un projet donné, la rubrique "Espace de travail" de l'interface Web ne montre que le répertoire de l'esclave sur lequel a été effectué le dernier build.
    Jenkins                         : Logiciel dont les sources sont un fork des sources d'Hudson, présentant des améliorations par rapport à ce dernier

    Associer un label à un noeud : Hudson > nodes >  "noeud spécifique" > Configurer > Etiquette

Maven
-----
    Afficher les dépendances définies dans les poms (en lisant uniquement les poms mais sans analyser les dépendances réelles comme le fait analyze)
        Utiliser le goal tree du plugin dependency

    Afficher les dépendances déclarées et non utilisées / non déclarées et utilisées
        Utiliser le goal analyze du plugin dependency

    Compiler des source en jdk6
        Préciser la version du jdk
        Java 6 doit être configuré sur le poste, c'est-à-dire que la variable d'environnement %JAVA_HOME% doit pointer sur le répertoire du bon jdk et le %PATH% doit contenir le chemin du répertoire bin de ce jdk.</comment>

    Références
        Repository Central Maven : http://www.sonatype.org/central

Dactylographie
--------------
    Conseil précision
            Ramener régulièrement les doigt sur leur position de référence entre les frappes successives. Ceci permet d'accroitre la précision des frappes.
            Privilégier la précision à la vitesse de frappe. Ceci permet d'éviter le recours à la touche de correction qui a pour effet de faire perdre la position de référence. En outre, plus la vitesse de frappe augmente, plus une correction coûte cher (plus de caractères à corriger).
            N'appuyer sur les touches que lorsque l'on est sûr de ne pas commettre d'erreur.
            Ne pas enchainer trop de lettre à la suite pour ne pas perdre en précision.
            Décaler légèrement la main en quittant temporairement la position de référence pour appuyer sur les touches les moins accessibles (comme le w par exemple).
            Taper avec les bons doigts sur les touches (en particulier, utiliser le petit doigt pour taper sur la touche de suppression).

    Conseil vitesse
        Prendre plus de temps sur les mots complexes et accélérer sur les mots simples (the, of, ...) ou les groupes de lettres (ou, on, ...)

    Conseil rythme de frappe
        Ne faire des accélérations que sur des groupes de 3 lettres maximum.

    Comment taper les caractères ne correspondant à aucune touche ?
        Maintenir la touche ALT enfoncée, taper le code correspondant (voir tableau ci-dessous) en utilisant le clavier numérique, puis relacher la touche ALT



            +-----------+--------------+
            | Caractère | Code associé |
            +-----------+--------------+
            |     œ     |     0156     |
            |     Ç     |     0199     |
            |     ├     |      195     |
            |     ┤     |      180     |
            |     —     |      151     |
            |     ┌     |      218     |
            |     ┬     |      194     |
            |     ┐     |      191     |
            |     └     |      192     |
            |     ┘     |      217     |
            |     │     |      179     |
            |     ┴     |      193     |
            +-----------+--------------+

    Références :
        Liste de codes des caractères : http://www.toutimages.com/codes_caracteres.htm

Sécurité
--------
    Clés asymétriques :
        La propriété des clés asymétriques est qu'un message chiffré par une clé publique n'est lisible que par le propriétaire de la clé privée correspondante.
        À l'inverse, un message chiffré par la clé privée sera lisible par tous ceux qui possèdent la clé publique.
        Ainsi, le détenteur de la clé privée peut signer les messages qu'il envoi et lire les messages qui lui sont adressés.

    Références :
        Convivialité des mots de passe                      : http://www.baekdal.com/insights/password-security-usability
        Convivialité des mots de passe (FAQ)                : http://www.baekdal.com/insights/the-usability-of-passwords-faq
        Comprendre et maîtriser les clés SSH                : http://www.git-attitude.fr/2010/09/13/comprendre-et-maitriser-les-cles-ssh
        L’importance de la taille des clés en cryptographie : http://blogresearch.smalsrech.be/?p=4299
        Signature numérique                                 : http://fr.wikipedia.org/wiki/Signature_num%C3%A9rique
        Certificat électronique                             : http://fr.wikipedia.org/wiki/Certificat_%C3%A9lectronique

Confluence
----------
    Créer une section que l'on peut masquer / afficher : 
        1/ Déclarer le plugin composition-setup en début de page : 
            {composition-setup}
            cloak.toggle.type = default
            cloak.toggle.open = +
            cloak.toggle.close = -
            {composition-setup}
        2/ Créer la section :
            {toggle-cloak:id=Step1}{*}capture d'écran*
            {cloak:id=Step1|visible=false} !horodate.PNG|align=center!
            {cloak}

Divers
------
    Comprendre nos impôts                   : http://www.yterium.net/Comprendre-nos-impots
    5 alternatives gratuites à Visio        : http://maketecheasier.com/5-best-free-alternatives-to-microsoft-visio/2012/01/20
    Distribution des niveaux de vie en 2009 : http://www.insee.fr/fr/themes/tableau.asp?reg_id=0&amp;ref_id=NATnon04247
    Test salaire                            : http://www.inegalites.fr/spip.php?page=salaire
    Abréviations courantes                  : http://monsu.desiderio.free.fr/atelier/abrevia.html
    Abréviations courantes MR               : http://fr.wikipedia.org/wiki/MR
    Raccourcis clavier d'Internet Explorer  : http://windows.microsoft.com/fr-BE/windows-vista/Internet-Explorer-8-keyboard-shortcuts